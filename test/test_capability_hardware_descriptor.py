# coding: utf-8

"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-06-30T07:31:54Z.  # noqa: E501

    The version of the OpenAPI document: 1.0.9-1950
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.capability_adapter_unit_descriptor import CapabilityAdapterUnitDescriptor
from openapi_client.model.capability_capability_relationship import CapabilityCapabilityRelationship
from openapi_client.model.capability_chassis_descriptor import CapabilityChassisDescriptor
from openapi_client.model.capability_endpoint_descriptor import CapabilityEndpointDescriptor
from openapi_client.model.capability_fan_module_descriptor import CapabilityFanModuleDescriptor
from openapi_client.model.capability_io_card_descriptor import CapabilityIoCardDescriptor
from openapi_client.model.capability_psu_descriptor import CapabilityPsuDescriptor
from openapi_client.model.capability_section_relationship import CapabilitySectionRelationship
from openapi_client.model.capability_sioc_module_descriptor import CapabilitySiocModuleDescriptor
from openapi_client.model.capability_switch_descriptor import CapabilitySwitchDescriptor
from openapi_client.model.display_names import DisplayNames
from openapi_client.model.firmware_bios_descriptor import FirmwareBiosDescriptor
from openapi_client.model.firmware_board_controller_descriptor import FirmwareBoardControllerDescriptor
from openapi_client.model.firmware_cimc_descriptor import FirmwareCimcDescriptor
from openapi_client.model.firmware_component_descriptor import FirmwareComponentDescriptor
from openapi_client.model.firmware_dimm_descriptor import FirmwareDimmDescriptor
from openapi_client.model.firmware_drive_descriptor import FirmwareDriveDescriptor
from openapi_client.model.firmware_gpu_descriptor import FirmwareGpuDescriptor
from openapi_client.model.firmware_hba_descriptor import FirmwareHbaDescriptor
from openapi_client.model.firmware_iom_descriptor import FirmwareIomDescriptor
from openapi_client.model.firmware_mswitch_descriptor import FirmwareMswitchDescriptor
from openapi_client.model.firmware_nxos_descriptor import FirmwareNxosDescriptor
from openapi_client.model.firmware_pcie_descriptor import FirmwarePcieDescriptor
from openapi_client.model.firmware_psu_descriptor import FirmwarePsuDescriptor
from openapi_client.model.firmware_sas_expander_descriptor import FirmwareSasExpanderDescriptor
from openapi_client.model.firmware_storage_controller_descriptor import FirmwareStorageControllerDescriptor
from openapi_client.model.mo_base_mo_relationship import MoBaseMoRelationship
from openapi_client.model.mo_tag import MoTag
from openapi_client.model.mo_version_context import MoVersionContext
globals()['CapabilityAdapterUnitDescriptor'] = CapabilityAdapterUnitDescriptor
globals()['CapabilityCapabilityRelationship'] = CapabilityCapabilityRelationship
globals()['CapabilityChassisDescriptor'] = CapabilityChassisDescriptor
globals()['CapabilityEndpointDescriptor'] = CapabilityEndpointDescriptor
globals()['CapabilityFanModuleDescriptor'] = CapabilityFanModuleDescriptor
globals()['CapabilityIoCardDescriptor'] = CapabilityIoCardDescriptor
globals()['CapabilityPsuDescriptor'] = CapabilityPsuDescriptor
globals()['CapabilitySectionRelationship'] = CapabilitySectionRelationship
globals()['CapabilitySiocModuleDescriptor'] = CapabilitySiocModuleDescriptor
globals()['CapabilitySwitchDescriptor'] = CapabilitySwitchDescriptor
globals()['DisplayNames'] = DisplayNames
globals()['FirmwareBiosDescriptor'] = FirmwareBiosDescriptor
globals()['FirmwareBoardControllerDescriptor'] = FirmwareBoardControllerDescriptor
globals()['FirmwareCimcDescriptor'] = FirmwareCimcDescriptor
globals()['FirmwareComponentDescriptor'] = FirmwareComponentDescriptor
globals()['FirmwareDimmDescriptor'] = FirmwareDimmDescriptor
globals()['FirmwareDriveDescriptor'] = FirmwareDriveDescriptor
globals()['FirmwareGpuDescriptor'] = FirmwareGpuDescriptor
globals()['FirmwareHbaDescriptor'] = FirmwareHbaDescriptor
globals()['FirmwareIomDescriptor'] = FirmwareIomDescriptor
globals()['FirmwareMswitchDescriptor'] = FirmwareMswitchDescriptor
globals()['FirmwareNxosDescriptor'] = FirmwareNxosDescriptor
globals()['FirmwarePcieDescriptor'] = FirmwarePcieDescriptor
globals()['FirmwarePsuDescriptor'] = FirmwarePsuDescriptor
globals()['FirmwareSasExpanderDescriptor'] = FirmwareSasExpanderDescriptor
globals()['FirmwareStorageControllerDescriptor'] = FirmwareStorageControllerDescriptor
globals()['MoBaseMoRelationship'] = MoBaseMoRelationship
globals()['MoTag'] = MoTag
globals()['MoVersionContext'] = MoVersionContext
from openapi_client.model.capability_hardware_descriptor import CapabilityHardwareDescriptor


class TestCapabilityHardwareDescriptor(unittest.TestCase):
    """CapabilityHardwareDescriptor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testCapabilityHardwareDescriptor(self):
        """Test CapabilityHardwareDescriptor"""
        # FIXME: construct object with mandatory attributes with example values
        # model = CapabilityHardwareDescriptor()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
