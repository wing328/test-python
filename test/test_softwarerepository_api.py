# coding: utf-8

"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-06-30T07:31:54Z.  # noqa: E501

    The version of the OpenAPI document: 1.0.9-1950
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.softwarerepository_api import SoftwarerepositoryApi  # noqa: E501


class TestSoftwarerepositoryApi(unittest.TestCase):
    """SoftwarerepositoryApi unit test stubs"""

    def setUp(self):
        self.api = SoftwarerepositoryApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_softwarerepository_authorization(self):
        """Test case for create_softwarerepository_authorization

        Create a 'softwarerepository.Authorization' resource.  # noqa: E501
        """
        pass

    def test_create_softwarerepository_category_mapper(self):
        """Test case for create_softwarerepository_category_mapper

        Create a 'softwarerepository.CategoryMapper' resource.  # noqa: E501
        """
        pass

    def test_create_softwarerepository_category_mapper_model(self):
        """Test case for create_softwarerepository_category_mapper_model

        Create a 'softwarerepository.CategoryMapperModel' resource.  # noqa: E501
        """
        pass

    def test_create_softwarerepository_operating_system_file(self):
        """Test case for create_softwarerepository_operating_system_file

        Create a 'softwarerepository.OperatingSystemFile' resource.  # noqa: E501
        """
        pass

    def test_create_softwarerepository_release(self):
        """Test case for create_softwarerepository_release

        Create a 'softwarerepository.Release' resource.  # noqa: E501
        """
        pass

    def test_delete_softwarerepository_category_mapper(self):
        """Test case for delete_softwarerepository_category_mapper

        Delete a 'softwarerepository.CategoryMapper' resource.  # noqa: E501
        """
        pass

    def test_delete_softwarerepository_category_mapper_model(self):
        """Test case for delete_softwarerepository_category_mapper_model

        Delete a 'softwarerepository.CategoryMapperModel' resource.  # noqa: E501
        """
        pass

    def test_delete_softwarerepository_operating_system_file(self):
        """Test case for delete_softwarerepository_operating_system_file

        Delete a 'softwarerepository.OperatingSystemFile' resource.  # noqa: E501
        """
        pass

    def test_delete_softwarerepository_release(self):
        """Test case for delete_softwarerepository_release

        Delete a 'softwarerepository.Release' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_authorization_by_moid(self):
        """Test case for get_softwarerepository_authorization_by_moid

        Read a 'softwarerepository.Authorization' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_authorization_list(self):
        """Test case for get_softwarerepository_authorization_list

        Read a 'softwarerepository.Authorization' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_cached_image_by_moid(self):
        """Test case for get_softwarerepository_cached_image_by_moid

        Read a 'softwarerepository.CachedImage' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_cached_image_list(self):
        """Test case for get_softwarerepository_cached_image_list

        Read a 'softwarerepository.CachedImage' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_catalog_by_moid(self):
        """Test case for get_softwarerepository_catalog_by_moid

        Read a 'softwarerepository.Catalog' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_catalog_list(self):
        """Test case for get_softwarerepository_catalog_list

        Read a 'softwarerepository.Catalog' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_category_mapper_by_moid(self):
        """Test case for get_softwarerepository_category_mapper_by_moid

        Read a 'softwarerepository.CategoryMapper' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_category_mapper_list(self):
        """Test case for get_softwarerepository_category_mapper_list

        Read a 'softwarerepository.CategoryMapper' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_category_mapper_model_by_moid(self):
        """Test case for get_softwarerepository_category_mapper_model_by_moid

        Read a 'softwarerepository.CategoryMapperModel' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_category_mapper_model_list(self):
        """Test case for get_softwarerepository_category_mapper_model_list

        Read a 'softwarerepository.CategoryMapperModel' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_download_spec_by_moid(self):
        """Test case for get_softwarerepository_download_spec_by_moid

        Read a 'softwarerepository.DownloadSpec' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_download_spec_list(self):
        """Test case for get_softwarerepository_download_spec_list

        Read a 'softwarerepository.DownloadSpec' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_operating_system_file_by_moid(self):
        """Test case for get_softwarerepository_operating_system_file_by_moid

        Read a 'softwarerepository.OperatingSystemFile' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_operating_system_file_list(self):
        """Test case for get_softwarerepository_operating_system_file_list

        Read a 'softwarerepository.OperatingSystemFile' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_release_by_moid(self):
        """Test case for get_softwarerepository_release_by_moid

        Read a 'softwarerepository.Release' resource.  # noqa: E501
        """
        pass

    def test_get_softwarerepository_release_list(self):
        """Test case for get_softwarerepository_release_list

        Read a 'softwarerepository.Release' resource.  # noqa: E501
        """
        pass

    def test_patch_softwarerepository_authorization(self):
        """Test case for patch_softwarerepository_authorization

        Update a 'softwarerepository.Authorization' resource.  # noqa: E501
        """
        pass

    def test_patch_softwarerepository_category_mapper(self):
        """Test case for patch_softwarerepository_category_mapper

        Update a 'softwarerepository.CategoryMapper' resource.  # noqa: E501
        """
        pass

    def test_patch_softwarerepository_category_mapper_model(self):
        """Test case for patch_softwarerepository_category_mapper_model

        Update a 'softwarerepository.CategoryMapperModel' resource.  # noqa: E501
        """
        pass

    def test_patch_softwarerepository_operating_system_file(self):
        """Test case for patch_softwarerepository_operating_system_file

        Update a 'softwarerepository.OperatingSystemFile' resource.  # noqa: E501
        """
        pass

    def test_patch_softwarerepository_release(self):
        """Test case for patch_softwarerepository_release

        Update a 'softwarerepository.Release' resource.  # noqa: E501
        """
        pass

    def test_update_softwarerepository_authorization(self):
        """Test case for update_softwarerepository_authorization

        Update a 'softwarerepository.Authorization' resource.  # noqa: E501
        """
        pass

    def test_update_softwarerepository_category_mapper(self):
        """Test case for update_softwarerepository_category_mapper

        Update a 'softwarerepository.CategoryMapper' resource.  # noqa: E501
        """
        pass

    def test_update_softwarerepository_category_mapper_model(self):
        """Test case for update_softwarerepository_category_mapper_model

        Update a 'softwarerepository.CategoryMapperModel' resource.  # noqa: E501
        """
        pass

    def test_update_softwarerepository_operating_system_file(self):
        """Test case for update_softwarerepository_operating_system_file

        Update a 'softwarerepository.OperatingSystemFile' resource.  # noqa: E501
        """
        pass

    def test_update_softwarerepository_release(self):
        """Test case for update_softwarerepository_release

        Update a 'softwarerepository.Release' resource.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
