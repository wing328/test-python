# coding: utf-8

"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-06-30T07:31:54Z.  # noqa: E501

    The version of the OpenAPI document: 1.0.9-1950
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.capability_capability_all_of import CapabilityCapabilityAllOf
from openapi_client.model.capability_chassis_manufacturing_def import CapabilityChassisManufacturingDef
from openapi_client.model.capability_equipment_physical_def import CapabilityEquipmentPhysicalDef
from openapi_client.model.capability_equipment_slot_array import CapabilityEquipmentSlotArray
from openapi_client.model.capability_fan_module_manufacturing_def import CapabilityFanModuleManufacturingDef
from openapi_client.model.capability_io_card_capability_def import CapabilityIoCardCapabilityDef
from openapi_client.model.capability_io_card_manufacturing_def import CapabilityIoCardManufacturingDef
from openapi_client.model.capability_port_group_aggregation_def import CapabilityPortGroupAggregationDef
from openapi_client.model.capability_psu_manufacturing_def import CapabilityPsuManufacturingDef
from openapi_client.model.capability_section_relationship import CapabilitySectionRelationship
from openapi_client.model.capability_sioc_module_capability_def import CapabilitySiocModuleCapabilityDef
from openapi_client.model.capability_sioc_module_manufacturing_def import CapabilitySiocModuleManufacturingDef
from openapi_client.model.capability_switch_capability import CapabilitySwitchCapability
from openapi_client.model.capability_switch_capability_def import CapabilitySwitchCapabilityDef
from openapi_client.model.capability_switch_manufacturing_def import CapabilitySwitchManufacturingDef
from openapi_client.model.display_names import DisplayNames
from openapi_client.model.mo_base_mo import MoBaseMo
from openapi_client.model.mo_base_mo_relationship import MoBaseMoRelationship
from openapi_client.model.mo_tag import MoTag
from openapi_client.model.mo_version_context import MoVersionContext
from openapi_client.model.softwarerepository_category_mapper import SoftwarerepositoryCategoryMapper
from openapi_client.model.softwarerepository_category_mapper_model import SoftwarerepositoryCategoryMapperModel
globals()['CapabilityCapabilityAllOf'] = CapabilityCapabilityAllOf
globals()['CapabilityChassisManufacturingDef'] = CapabilityChassisManufacturingDef
globals()['CapabilityEquipmentPhysicalDef'] = CapabilityEquipmentPhysicalDef
globals()['CapabilityEquipmentSlotArray'] = CapabilityEquipmentSlotArray
globals()['CapabilityFanModuleManufacturingDef'] = CapabilityFanModuleManufacturingDef
globals()['CapabilityIoCardCapabilityDef'] = CapabilityIoCardCapabilityDef
globals()['CapabilityIoCardManufacturingDef'] = CapabilityIoCardManufacturingDef
globals()['CapabilityPortGroupAggregationDef'] = CapabilityPortGroupAggregationDef
globals()['CapabilityPsuManufacturingDef'] = CapabilityPsuManufacturingDef
globals()['CapabilitySectionRelationship'] = CapabilitySectionRelationship
globals()['CapabilitySiocModuleCapabilityDef'] = CapabilitySiocModuleCapabilityDef
globals()['CapabilitySiocModuleManufacturingDef'] = CapabilitySiocModuleManufacturingDef
globals()['CapabilitySwitchCapability'] = CapabilitySwitchCapability
globals()['CapabilitySwitchCapabilityDef'] = CapabilitySwitchCapabilityDef
globals()['CapabilitySwitchManufacturingDef'] = CapabilitySwitchManufacturingDef
globals()['DisplayNames'] = DisplayNames
globals()['MoBaseMo'] = MoBaseMo
globals()['MoBaseMoRelationship'] = MoBaseMoRelationship
globals()['MoTag'] = MoTag
globals()['MoVersionContext'] = MoVersionContext
globals()['SoftwarerepositoryCategoryMapper'] = SoftwarerepositoryCategoryMapper
globals()['SoftwarerepositoryCategoryMapperModel'] = SoftwarerepositoryCategoryMapperModel
from openapi_client.model.capability_capability import CapabilityCapability


class TestCapabilityCapability(unittest.TestCase):
    """CapabilityCapability unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testCapabilityCapability(self):
        """Test CapabilityCapability"""
        # FIXME: construct object with mandatory attributes with example values
        # model = CapabilityCapability()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
