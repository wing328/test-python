# coding: utf-8

"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-06-30T07:31:54Z.  # noqa: E501

    The version of the OpenAPI document: 1.0.9-1950
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.adapter_host_fc_interface import AdapterHostFcInterface
from openapi_client.model.adapter_host_iscsi_interface import AdapterHostIscsiInterface
from openapi_client.model.adapter_unit import AdapterUnit
from openapi_client.model.bios_unit import BiosUnit
from openapi_client.model.compute_blade import ComputeBlade
from openapi_client.model.compute_board import ComputeBoard
from openapi_client.model.compute_physical import ComputePhysical
from openapi_client.model.compute_rack_unit import ComputeRackUnit
from openapi_client.model.display_names import DisplayNames
from openapi_client.model.equipment_abstract_device import EquipmentAbstractDevice
from openapi_client.model.equipment_base_all_of import EquipmentBaseAllOf
from openapi_client.model.equipment_chassis import EquipmentChassis
from openapi_client.model.equipment_fan import EquipmentFan
from openapi_client.model.equipment_fan_module import EquipmentFanModule
from openapi_client.model.equipment_fex import EquipmentFex
from openapi_client.model.equipment_io_card import EquipmentIoCard
from openapi_client.model.equipment_io_card_base import EquipmentIoCardBase
from openapi_client.model.equipment_io_expander import EquipmentIoExpander
from openapi_client.model.equipment_psu import EquipmentPsu
from openapi_client.model.equipment_psu_control import EquipmentPsuControl
from openapi_client.model.equipment_rack_enclosure import EquipmentRackEnclosure
from openapi_client.model.equipment_rack_enclosure_slot import EquipmentRackEnclosureSlot
from openapi_client.model.equipment_shared_io_module import EquipmentSharedIoModule
from openapi_client.model.equipment_switch_card import EquipmentSwitchCard
from openapi_client.model.equipment_system_io_controller import EquipmentSystemIoController
from openapi_client.model.equipment_tpm import EquipmentTpm
from openapi_client.model.equipment_transceiver import EquipmentTransceiver
from openapi_client.model.graphics_card import GraphicsCard
from openapi_client.model.graphics_controller import GraphicsController
from openapi_client.model.inventory_base import InventoryBase
from openapi_client.model.memory_abstract_unit import MemoryAbstractUnit
from openapi_client.model.memory_array import MemoryArray
from openapi_client.model.memory_persistent_memory_unit import MemoryPersistentMemoryUnit
from openapi_client.model.memory_unit import MemoryUnit
from openapi_client.model.mo_base_mo_relationship import MoBaseMoRelationship
from openapi_client.model.mo_tag import MoTag
from openapi_client.model.mo_version_context import MoVersionContext
from openapi_client.model.network_element import NetworkElement
from openapi_client.model.pci_coprocessor_card import PciCoprocessorCard
from openapi_client.model.pci_device import PciDevice
from openapi_client.model.pci_link import PciLink
from openapi_client.model.pci_switch import PciSwitch
from openapi_client.model.processor_unit import ProcessorUnit
from openapi_client.model.security_unit import SecurityUnit
from openapi_client.model.storage_base_array import StorageBaseArray
from openapi_client.model.storage_base_array_controller import StorageBaseArrayController
from openapi_client.model.storage_base_array_disk import StorageBaseArrayDisk
from openapi_client.model.storage_controller import StorageController
from openapi_client.model.storage_enclosure import StorageEnclosure
from openapi_client.model.storage_enclosure_disk import StorageEnclosureDisk
from openapi_client.model.storage_flex_flash_controller import StorageFlexFlashController
from openapi_client.model.storage_flex_flash_controller_props import StorageFlexFlashControllerProps
from openapi_client.model.storage_flex_flash_physical_drive import StorageFlexFlashPhysicalDrive
from openapi_client.model.storage_flex_flash_virtual_drive import StorageFlexFlashVirtualDrive
from openapi_client.model.storage_flex_util_physical_drive import StorageFlexUtilPhysicalDrive
from openapi_client.model.storage_physical_disk import StoragePhysicalDisk
from openapi_client.model.storage_physical_disk_extension import StoragePhysicalDiskExtension
from openapi_client.model.storage_pure_array import StoragePureArray
from openapi_client.model.storage_pure_controller import StoragePureController
from openapi_client.model.storage_pure_disk import StoragePureDisk
from openapi_client.model.storage_sas_expander import StorageSasExpander
from openapi_client.model.storage_virtual_drive import StorageVirtualDrive
globals()['AdapterHostFcInterface'] = AdapterHostFcInterface
globals()['AdapterHostIscsiInterface'] = AdapterHostIscsiInterface
globals()['AdapterUnit'] = AdapterUnit
globals()['BiosUnit'] = BiosUnit
globals()['ComputeBlade'] = ComputeBlade
globals()['ComputeBoard'] = ComputeBoard
globals()['ComputePhysical'] = ComputePhysical
globals()['ComputeRackUnit'] = ComputeRackUnit
globals()['DisplayNames'] = DisplayNames
globals()['EquipmentAbstractDevice'] = EquipmentAbstractDevice
globals()['EquipmentBaseAllOf'] = EquipmentBaseAllOf
globals()['EquipmentChassis'] = EquipmentChassis
globals()['EquipmentFan'] = EquipmentFan
globals()['EquipmentFanModule'] = EquipmentFanModule
globals()['EquipmentFex'] = EquipmentFex
globals()['EquipmentIoCard'] = EquipmentIoCard
globals()['EquipmentIoCardBase'] = EquipmentIoCardBase
globals()['EquipmentIoExpander'] = EquipmentIoExpander
globals()['EquipmentPsu'] = EquipmentPsu
globals()['EquipmentPsuControl'] = EquipmentPsuControl
globals()['EquipmentRackEnclosure'] = EquipmentRackEnclosure
globals()['EquipmentRackEnclosureSlot'] = EquipmentRackEnclosureSlot
globals()['EquipmentSharedIoModule'] = EquipmentSharedIoModule
globals()['EquipmentSwitchCard'] = EquipmentSwitchCard
globals()['EquipmentSystemIoController'] = EquipmentSystemIoController
globals()['EquipmentTpm'] = EquipmentTpm
globals()['EquipmentTransceiver'] = EquipmentTransceiver
globals()['GraphicsCard'] = GraphicsCard
globals()['GraphicsController'] = GraphicsController
globals()['InventoryBase'] = InventoryBase
globals()['MemoryAbstractUnit'] = MemoryAbstractUnit
globals()['MemoryArray'] = MemoryArray
globals()['MemoryPersistentMemoryUnit'] = MemoryPersistentMemoryUnit
globals()['MemoryUnit'] = MemoryUnit
globals()['MoBaseMoRelationship'] = MoBaseMoRelationship
globals()['MoTag'] = MoTag
globals()['MoVersionContext'] = MoVersionContext
globals()['NetworkElement'] = NetworkElement
globals()['PciCoprocessorCard'] = PciCoprocessorCard
globals()['PciDevice'] = PciDevice
globals()['PciLink'] = PciLink
globals()['PciSwitch'] = PciSwitch
globals()['ProcessorUnit'] = ProcessorUnit
globals()['SecurityUnit'] = SecurityUnit
globals()['StorageBaseArray'] = StorageBaseArray
globals()['StorageBaseArrayController'] = StorageBaseArrayController
globals()['StorageBaseArrayDisk'] = StorageBaseArrayDisk
globals()['StorageController'] = StorageController
globals()['StorageEnclosure'] = StorageEnclosure
globals()['StorageEnclosureDisk'] = StorageEnclosureDisk
globals()['StorageFlexFlashController'] = StorageFlexFlashController
globals()['StorageFlexFlashControllerProps'] = StorageFlexFlashControllerProps
globals()['StorageFlexFlashPhysicalDrive'] = StorageFlexFlashPhysicalDrive
globals()['StorageFlexFlashVirtualDrive'] = StorageFlexFlashVirtualDrive
globals()['StorageFlexUtilPhysicalDrive'] = StorageFlexUtilPhysicalDrive
globals()['StoragePhysicalDisk'] = StoragePhysicalDisk
globals()['StoragePhysicalDiskExtension'] = StoragePhysicalDiskExtension
globals()['StoragePureArray'] = StoragePureArray
globals()['StoragePureController'] = StoragePureController
globals()['StoragePureDisk'] = StoragePureDisk
globals()['StorageSasExpander'] = StorageSasExpander
globals()['StorageVirtualDrive'] = StorageVirtualDrive
from openapi_client.model.equipment_base import EquipmentBase


class TestEquipmentBase(unittest.TestCase):
    """EquipmentBase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testEquipmentBase(self):
        """Test EquipmentBase"""
        # FIXME: construct object with mandatory attributes with example values
        # model = EquipmentBase()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
