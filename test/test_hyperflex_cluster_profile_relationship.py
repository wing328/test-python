# coding: utf-8

"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-06-30T07:31:54Z.  # noqa: E501

    The version of the OpenAPI document: 1.0.9-1950
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.display_names import DisplayNames
from openapi_client.model.hyperflex_auto_support_policy_relationship import HyperflexAutoSupportPolicyRelationship
from openapi_client.model.hyperflex_cluster_network_policy_relationship import HyperflexClusterNetworkPolicyRelationship
from openapi_client.model.hyperflex_cluster_profile import HyperflexClusterProfile
from openapi_client.model.hyperflex_cluster_relationship import HyperflexClusterRelationship
from openapi_client.model.hyperflex_cluster_storage_policy_relationship import HyperflexClusterStoragePolicyRelationship
from openapi_client.model.hyperflex_config_result_relationship import HyperflexConfigResultRelationship
from openapi_client.model.hyperflex_ext_fc_storage_policy_relationship import HyperflexExtFcStoragePolicyRelationship
from openapi_client.model.hyperflex_ext_iscsi_storage_policy_relationship import HyperflexExtIscsiStoragePolicyRelationship
from openapi_client.model.hyperflex_local_credential_policy_relationship import HyperflexLocalCredentialPolicyRelationship
from openapi_client.model.hyperflex_named_vlan import HyperflexNamedVlan
from openapi_client.model.hyperflex_node_config_policy_relationship import HyperflexNodeConfigPolicyRelationship
from openapi_client.model.hyperflex_node_profile_relationship import HyperflexNodeProfileRelationship
from openapi_client.model.hyperflex_proxy_setting_policy_relationship import HyperflexProxySettingPolicyRelationship
from openapi_client.model.hyperflex_software_version_policy_relationship import HyperflexSoftwareVersionPolicyRelationship
from openapi_client.model.hyperflex_sys_config_policy_relationship import HyperflexSysConfigPolicyRelationship
from openapi_client.model.hyperflex_ucsm_config_policy_relationship import HyperflexUcsmConfigPolicyRelationship
from openapi_client.model.hyperflex_vcenter_config_policy_relationship import HyperflexVcenterConfigPolicyRelationship
from openapi_client.model.mo_base_mo_relationship import MoBaseMoRelationship
from openapi_client.model.mo_mo_ref import MoMoRef
from openapi_client.model.mo_tag import MoTag
from openapi_client.model.mo_version_context import MoVersionContext
from openapi_client.model.organization_organization_relationship import OrganizationOrganizationRelationship
from openapi_client.model.policy_abstract_profile_relationship import PolicyAbstractProfileRelationship
from openapi_client.model.policy_config_context import PolicyConfigContext
from openapi_client.model.workflow_workflow_info_relationship import WorkflowWorkflowInfoRelationship
globals()['DisplayNames'] = DisplayNames
globals()['HyperflexAutoSupportPolicyRelationship'] = HyperflexAutoSupportPolicyRelationship
globals()['HyperflexClusterNetworkPolicyRelationship'] = HyperflexClusterNetworkPolicyRelationship
globals()['HyperflexClusterProfile'] = HyperflexClusterProfile
globals()['HyperflexClusterRelationship'] = HyperflexClusterRelationship
globals()['HyperflexClusterStoragePolicyRelationship'] = HyperflexClusterStoragePolicyRelationship
globals()['HyperflexConfigResultRelationship'] = HyperflexConfigResultRelationship
globals()['HyperflexExtFcStoragePolicyRelationship'] = HyperflexExtFcStoragePolicyRelationship
globals()['HyperflexExtIscsiStoragePolicyRelationship'] = HyperflexExtIscsiStoragePolicyRelationship
globals()['HyperflexLocalCredentialPolicyRelationship'] = HyperflexLocalCredentialPolicyRelationship
globals()['HyperflexNamedVlan'] = HyperflexNamedVlan
globals()['HyperflexNodeConfigPolicyRelationship'] = HyperflexNodeConfigPolicyRelationship
globals()['HyperflexNodeProfileRelationship'] = HyperflexNodeProfileRelationship
globals()['HyperflexProxySettingPolicyRelationship'] = HyperflexProxySettingPolicyRelationship
globals()['HyperflexSoftwareVersionPolicyRelationship'] = HyperflexSoftwareVersionPolicyRelationship
globals()['HyperflexSysConfigPolicyRelationship'] = HyperflexSysConfigPolicyRelationship
globals()['HyperflexUcsmConfigPolicyRelationship'] = HyperflexUcsmConfigPolicyRelationship
globals()['HyperflexVcenterConfigPolicyRelationship'] = HyperflexVcenterConfigPolicyRelationship
globals()['MoBaseMoRelationship'] = MoBaseMoRelationship
globals()['MoMoRef'] = MoMoRef
globals()['MoTag'] = MoTag
globals()['MoVersionContext'] = MoVersionContext
globals()['OrganizationOrganizationRelationship'] = OrganizationOrganizationRelationship
globals()['PolicyAbstractProfileRelationship'] = PolicyAbstractProfileRelationship
globals()['PolicyConfigContext'] = PolicyConfigContext
globals()['WorkflowWorkflowInfoRelationship'] = WorkflowWorkflowInfoRelationship
from openapi_client.model.hyperflex_cluster_profile_relationship import HyperflexClusterProfileRelationship


class TestHyperflexClusterProfileRelationship(unittest.TestCase):
    """HyperflexClusterProfileRelationship unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testHyperflexClusterProfileRelationship(self):
        """Test HyperflexClusterProfileRelationship"""
        # FIXME: construct object with mandatory attributes with example values
        # model = HyperflexClusterProfileRelationship()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
