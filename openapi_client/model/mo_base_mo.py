# coding: utf-8

"""
    Cisco Intersight

    Cisco Intersight is a management platform delivered as a service with embedded analytics for your Cisco and 3rd party IT infrastructure. This platform offers an intelligent level of management that enables IT organizations to analyze, simplify, and automate their environments in more advanced ways than the prior generations of tools. Cisco Intersight provides an integrated and intuitive management experience for resources in the traditional data center as well as at the edge. With flexible deployment options to address complex security needs, getting started with Intersight is quick and easy. Cisco Intersight has deep integration with Cisco UCS and HyperFlex systems allowing for remote deployment, configuration, and ongoing maintenance. The model-based deployment works for a single system in a remote location or hundreds of systems in a data center and enables rapid, standardized configuration and deployment. It also streamlines maintaining those systems whether you are working with small or very large configurations. The Intersight OpenAPI document defines the complete set of properties that are returned in the HTTP response. From that perspective, a client can expect that no additional properties are returned, unless these properties are explicitly defined in the OpenAPI document. However, when a client uses an older version of the Intersight OpenAPI document, the server may send additional properties because the software is more recent than the client. In that case, the client may receive properties that it does not know about. Some generated SDKs perform a strict validation of the HTTP response body against the OpenAPI document. This document was created on 2020-06-30T07:31:54Z.  # noqa: E501

    The version of the OpenAPI document: 1.0.9-1950
    Contact: intersight@cisco.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

import nulltype  # noqa: F401

from openapi_client.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
)

def lazy_import():
    from openapi_client.model.aaa_abstract_audit_record import AaaAbstractAuditRecord
    from openapi_client.model.aaa_audit_record import AaaAuditRecord
    from openapi_client.model.access_policy import AccessPolicy
    from openapi_client.model.adapter_config_policy import AdapterConfigPolicy
    from openapi_client.model.adapter_ext_eth_interface import AdapterExtEthInterface
    from openapi_client.model.adapter_host_eth_interface import AdapterHostEthInterface
    from openapi_client.model.adapter_host_fc_interface import AdapterHostFcInterface
    from openapi_client.model.adapter_host_iscsi_interface import AdapterHostIscsiInterface
    from openapi_client.model.adapter_unit import AdapterUnit
    from openapi_client.model.appliance_backup import ApplianceBackup
    from openapi_client.model.appliance_backup_base import ApplianceBackupBase
    from openapi_client.model.appliance_backup_policy import ApplianceBackupPolicy
    from openapi_client.model.appliance_certificate_setting import ApplianceCertificateSetting
    from openapi_client.model.appliance_data_export_policy import ApplianceDataExportPolicy
    from openapi_client.model.appliance_device_claim import ApplianceDeviceClaim
    from openapi_client.model.appliance_diag_setting import ApplianceDiagSetting
    from openapi_client.model.appliance_image_bundle import ApplianceImageBundle
    from openapi_client.model.appliance_node_info import ApplianceNodeInfo
    from openapi_client.model.appliance_release_note import ApplianceReleaseNote
    from openapi_client.model.appliance_restore import ApplianceRestore
    from openapi_client.model.appliance_setup_info import ApplianceSetupInfo
    from openapi_client.model.appliance_system_info import ApplianceSystemInfo
    from openapi_client.model.appliance_upgrade import ApplianceUpgrade
    from openapi_client.model.appliance_upgrade_policy import ApplianceUpgradePolicy
    from openapi_client.model.asset_cluster_member import AssetClusterMember
    from openapi_client.model.asset_device_claim import AssetDeviceClaim
    from openapi_client.model.asset_device_configuration import AssetDeviceConfiguration
    from openapi_client.model.asset_device_connection import AssetDeviceConnection
    from openapi_client.model.asset_device_connector_manager import AssetDeviceConnectorManager
    from openapi_client.model.asset_device_contract_information import AssetDeviceContractInformation
    from openapi_client.model.asset_device_registration import AssetDeviceRegistration
    from openapi_client.model.asset_managed_device import AssetManagedDevice
    from openapi_client.model.asset_target import AssetTarget
    from openapi_client.model.bios_boot_device import BiosBootDevice
    from openapi_client.model.bios_boot_mode import BiosBootMode
    from openapi_client.model.bios_policy import BiosPolicy
    from openapi_client.model.bios_system_boot_order import BiosSystemBootOrder
    from openapi_client.model.bios_unit import BiosUnit
    from openapi_client.model.boot_device_boot_mode import BootDeviceBootMode
    from openapi_client.model.boot_precision_policy import BootPrecisionPolicy
    from openapi_client.model.capability_adapter_unit_descriptor import CapabilityAdapterUnitDescriptor
    from openapi_client.model.capability_capability import CapabilityCapability
    from openapi_client.model.capability_chassis_descriptor import CapabilityChassisDescriptor
    from openapi_client.model.capability_chassis_manufacturing_def import CapabilityChassisManufacturingDef
    from openapi_client.model.capability_endpoint_descriptor import CapabilityEndpointDescriptor
    from openapi_client.model.capability_equipment_physical_def import CapabilityEquipmentPhysicalDef
    from openapi_client.model.capability_equipment_slot_array import CapabilityEquipmentSlotArray
    from openapi_client.model.capability_fan_module_descriptor import CapabilityFanModuleDescriptor
    from openapi_client.model.capability_fan_module_manufacturing_def import CapabilityFanModuleManufacturingDef
    from openapi_client.model.capability_hardware_descriptor import CapabilityHardwareDescriptor
    from openapi_client.model.capability_io_card_capability_def import CapabilityIoCardCapabilityDef
    from openapi_client.model.capability_io_card_descriptor import CapabilityIoCardDescriptor
    from openapi_client.model.capability_io_card_manufacturing_def import CapabilityIoCardManufacturingDef
    from openapi_client.model.capability_port_group_aggregation_def import CapabilityPortGroupAggregationDef
    from openapi_client.model.capability_psu_descriptor import CapabilityPsuDescriptor
    from openapi_client.model.capability_psu_manufacturing_def import CapabilityPsuManufacturingDef
    from openapi_client.model.capability_section import CapabilitySection
    from openapi_client.model.capability_sioc_module_capability_def import CapabilitySiocModuleCapabilityDef
    from openapi_client.model.capability_sioc_module_descriptor import CapabilitySiocModuleDescriptor
    from openapi_client.model.capability_sioc_module_manufacturing_def import CapabilitySiocModuleManufacturingDef
    from openapi_client.model.capability_switch_capability import CapabilitySwitchCapability
    from openapi_client.model.capability_switch_capability_def import CapabilitySwitchCapabilityDef
    from openapi_client.model.capability_switch_descriptor import CapabilitySwitchDescriptor
    from openapi_client.model.capability_switch_manufacturing_def import CapabilitySwitchManufacturingDef
    from openapi_client.model.compute_blade import ComputeBlade
    from openapi_client.model.compute_blade_identity import ComputeBladeIdentity
    from openapi_client.model.compute_board import ComputeBoard
    from openapi_client.model.compute_physical import ComputePhysical
    from openapi_client.model.compute_physical_summary import ComputePhysicalSummary
    from openapi_client.model.compute_rack_unit import ComputeRackUnit
    from openapi_client.model.compute_rack_unit_identity import ComputeRackUnitIdentity
    from openapi_client.model.compute_server_setting import ComputeServerSetting
    from openapi_client.model.cond_alarm import CondAlarm
    from openapi_client.model.cond_hcl_status import CondHclStatus
    from openapi_client.model.cond_hcl_status_detail import CondHclStatusDetail
    from openapi_client.model.cond_hcl_status_job import CondHclStatusJob
    from openapi_client.model.config_exported_item import ConfigExportedItem
    from openapi_client.model.config_exporter import ConfigExporter
    from openapi_client.model.config_imported_item import ConfigImportedItem
    from openapi_client.model.config_importer import ConfigImporter
    from openapi_client.model.connector_download_status import ConnectorDownloadStatus
    from openapi_client.model.connector_scoped_inventory import ConnectorScopedInventory
    from openapi_client.model.connectorpack_connector_pack_upgrade import ConnectorpackConnectorPackUpgrade
    from openapi_client.model.connectorpack_upgrade_impact import ConnectorpackUpgradeImpact
    from openapi_client.model.deviceconnector_policy import DeviceconnectorPolicy
    from openapi_client.model.display_names import DisplayNames
    from openapi_client.model.equipment_abstract_device import EquipmentAbstractDevice
    from openapi_client.model.equipment_base import EquipmentBase
    from openapi_client.model.equipment_chassis import EquipmentChassis
    from openapi_client.model.equipment_chassis_identity import EquipmentChassisIdentity
    from openapi_client.model.equipment_device_summary import EquipmentDeviceSummary
    from openapi_client.model.equipment_fan import EquipmentFan
    from openapi_client.model.equipment_fan_module import EquipmentFanModule
    from openapi_client.model.equipment_fex import EquipmentFex
    from openapi_client.model.equipment_fex_identity import EquipmentFexIdentity
    from openapi_client.model.equipment_fex_operation import EquipmentFexOperation
    from openapi_client.model.equipment_identity import EquipmentIdentity
    from openapi_client.model.equipment_identity_summary import EquipmentIdentitySummary
    from openapi_client.model.equipment_io_card import EquipmentIoCard
    from openapi_client.model.equipment_io_card_base import EquipmentIoCardBase
    from openapi_client.model.equipment_io_card_operation import EquipmentIoCardOperation
    from openapi_client.model.equipment_io_expander import EquipmentIoExpander
    from openapi_client.model.equipment_locator_led import EquipmentLocatorLed
    from openapi_client.model.equipment_physical_identity import EquipmentPhysicalIdentity
    from openapi_client.model.equipment_psu import EquipmentPsu
    from openapi_client.model.equipment_psu_control import EquipmentPsuControl
    from openapi_client.model.equipment_rack_enclosure import EquipmentRackEnclosure
    from openapi_client.model.equipment_rack_enclosure_slot import EquipmentRackEnclosureSlot
    from openapi_client.model.equipment_shared_io_module import EquipmentSharedIoModule
    from openapi_client.model.equipment_switch_card import EquipmentSwitchCard
    from openapi_client.model.equipment_system_io_controller import EquipmentSystemIoController
    from openapi_client.model.equipment_tpm import EquipmentTpm
    from openapi_client.model.equipment_transceiver import EquipmentTransceiver
    from openapi_client.model.ether_host_port import EtherHostPort
    from openapi_client.model.ether_network_port import EtherNetworkPort
    from openapi_client.model.ether_physical_port import EtherPhysicalPort
    from openapi_client.model.ether_physical_port_base import EtherPhysicalPortBase
    from openapi_client.model.ether_port_channel import EtherPortChannel
    from openapi_client.model.externalsite_authorization import ExternalsiteAuthorization
    from openapi_client.model.fabric_config_change_detail import FabricConfigChangeDetail
    from openapi_client.model.fabric_config_result import FabricConfigResult
    from openapi_client.model.fabric_config_result_entry import FabricConfigResultEntry
    from openapi_client.model.fabric_eth_network_control_policy import FabricEthNetworkControlPolicy
    from openapi_client.model.fabric_eth_network_policy import FabricEthNetworkPolicy
    from openapi_client.model.fabric_fc_network_policy import FabricFcNetworkPolicy
    from openapi_client.model.fabric_fc_uplink_pc_role import FabricFcUplinkPcRole
    from openapi_client.model.fabric_fc_uplink_role import FabricFcUplinkRole
    from openapi_client.model.fabric_fcoe_uplink_pc_role import FabricFcoeUplinkPcRole
    from openapi_client.model.fabric_fcoe_uplink_role import FabricFcoeUplinkRole
    from openapi_client.model.fabric_pc_member import FabricPcMember
    from openapi_client.model.fabric_pc_operation import FabricPcOperation
    from openapi_client.model.fabric_port_base import FabricPortBase
    from openapi_client.model.fabric_port_channel_role import FabricPortChannelRole
    from openapi_client.model.fabric_port_mode import FabricPortMode
    from openapi_client.model.fabric_port_operation import FabricPortOperation
    from openapi_client.model.fabric_port_policy import FabricPortPolicy
    from openapi_client.model.fabric_port_role import FabricPortRole
    from openapi_client.model.fabric_qos_policy import FabricQosPolicy
    from openapi_client.model.fabric_server_role import FabricServerRole
    from openapi_client.model.fabric_switch_cluster_profile import FabricSwitchClusterProfile
    from openapi_client.model.fabric_switch_profile import FabricSwitchProfile
    from openapi_client.model.fabric_uplink_pc_role import FabricUplinkPcRole
    from openapi_client.model.fabric_uplink_role import FabricUplinkRole
    from openapi_client.model.fabric_vlan import FabricVlan
    from openapi_client.model.fabric_vsan import FabricVsan
    from openapi_client.model.fault_instance import FaultInstance
    from openapi_client.model.fc_physical_port import FcPhysicalPort
    from openapi_client.model.fc_port_channel import FcPortChannel
    from openapi_client.model.fcpool_fc_block import FcpoolFcBlock
    from openapi_client.model.fcpool_lease import FcpoolLease
    from openapi_client.model.fcpool_pool import FcpoolPool
    from openapi_client.model.fcpool_pool_member import FcpoolPoolMember
    from openapi_client.model.fcpool_universe import FcpoolUniverse
    from openapi_client.model.feedback_feedback_post import FeedbackFeedbackPost
    from openapi_client.model.firmware_base_distributable import FirmwareBaseDistributable
    from openapi_client.model.firmware_bios_descriptor import FirmwareBiosDescriptor
    from openapi_client.model.firmware_board_controller_descriptor import FirmwareBoardControllerDescriptor
    from openapi_client.model.firmware_chassis_upgrade import FirmwareChassisUpgrade
    from openapi_client.model.firmware_cimc_descriptor import FirmwareCimcDescriptor
    from openapi_client.model.firmware_component_descriptor import FirmwareComponentDescriptor
    from openapi_client.model.firmware_dimm_descriptor import FirmwareDimmDescriptor
    from openapi_client.model.firmware_distributable import FirmwareDistributable
    from openapi_client.model.firmware_distributable_meta import FirmwareDistributableMeta
    from openapi_client.model.firmware_drive_descriptor import FirmwareDriveDescriptor
    from openapi_client.model.firmware_driver_distributable import FirmwareDriverDistributable
    from openapi_client.model.firmware_eula import FirmwareEula
    from openapi_client.model.firmware_firmware_summary import FirmwareFirmwareSummary
    from openapi_client.model.firmware_gpu_descriptor import FirmwareGpuDescriptor
    from openapi_client.model.firmware_hba_descriptor import FirmwareHbaDescriptor
    from openapi_client.model.firmware_iom_descriptor import FirmwareIomDescriptor
    from openapi_client.model.firmware_mswitch_descriptor import FirmwareMswitchDescriptor
    from openapi_client.model.firmware_nxos_descriptor import FirmwareNxosDescriptor
    from openapi_client.model.firmware_pcie_descriptor import FirmwarePcieDescriptor
    from openapi_client.model.firmware_psu_descriptor import FirmwarePsuDescriptor
    from openapi_client.model.firmware_running_firmware import FirmwareRunningFirmware
    from openapi_client.model.firmware_sas_expander_descriptor import FirmwareSasExpanderDescriptor
    from openapi_client.model.firmware_server_configuration_utility_distributable import FirmwareServerConfigurationUtilityDistributable
    from openapi_client.model.firmware_storage_controller_descriptor import FirmwareStorageControllerDescriptor
    from openapi_client.model.firmware_switch_upgrade import FirmwareSwitchUpgrade
    from openapi_client.model.firmware_upgrade import FirmwareUpgrade
    from openapi_client.model.firmware_upgrade_base import FirmwareUpgradeBase
    from openapi_client.model.firmware_upgrade_impact import FirmwareUpgradeImpact
    from openapi_client.model.firmware_upgrade_impact_base import FirmwareUpgradeImpactBase
    from openapi_client.model.firmware_upgrade_impact_status import FirmwareUpgradeImpactStatus
    from openapi_client.model.firmware_upgrade_status import FirmwareUpgradeStatus
    from openapi_client.model.forecast_catalog import ForecastCatalog
    from openapi_client.model.forecast_definition import ForecastDefinition
    from openapi_client.model.forecast_instance import ForecastInstance
    from openapi_client.model.graphics_card import GraphicsCard
    from openapi_client.model.graphics_controller import GraphicsController
    from openapi_client.model.hcl_compatibility_status import HclCompatibilityStatus
    from openapi_client.model.hcl_driver_image import HclDriverImage
    from openapi_client.model.hcl_exempted_catalog import HclExemptedCatalog
    from openapi_client.model.hcl_hyperflex_software_compatibility_info import HclHyperflexSoftwareCompatibilityInfo
    from openapi_client.model.hcl_operating_system import HclOperatingSystem
    from openapi_client.model.hcl_operating_system_vendor import HclOperatingSystemVendor
    from openapi_client.model.hcl_service_status import HclServiceStatus
    from openapi_client.model.hcl_supported_driver_name import HclSupportedDriverName
    from openapi_client.model.hyperflex_alarm import HyperflexAlarm
    from openapi_client.model.hyperflex_app_catalog import HyperflexAppCatalog
    from openapi_client.model.hyperflex_auto_support_policy import HyperflexAutoSupportPolicy
    from openapi_client.model.hyperflex_capability_info import HyperflexCapabilityInfo
    from openapi_client.model.hyperflex_cluster import HyperflexCluster
    from openapi_client.model.hyperflex_cluster_network_policy import HyperflexClusterNetworkPolicy
    from openapi_client.model.hyperflex_cluster_profile import HyperflexClusterProfile
    from openapi_client.model.hyperflex_cluster_storage_policy import HyperflexClusterStoragePolicy
    from openapi_client.model.hyperflex_config_result import HyperflexConfigResult
    from openapi_client.model.hyperflex_config_result_entry import HyperflexConfigResultEntry
    from openapi_client.model.hyperflex_ext_fc_storage_policy import HyperflexExtFcStoragePolicy
    from openapi_client.model.hyperflex_ext_iscsi_storage_policy import HyperflexExtIscsiStoragePolicy
    from openapi_client.model.hyperflex_feature_limit_external import HyperflexFeatureLimitExternal
    from openapi_client.model.hyperflex_feature_limit_internal import HyperflexFeatureLimitInternal
    from openapi_client.model.hyperflex_health import HyperflexHealth
    from openapi_client.model.hyperflex_hxdp_version import HyperflexHxdpVersion
    from openapi_client.model.hyperflex_local_credential_policy import HyperflexLocalCredentialPolicy
    from openapi_client.model.hyperflex_node import HyperflexNode
    from openapi_client.model.hyperflex_node_config_policy import HyperflexNodeConfigPolicy
    from openapi_client.model.hyperflex_node_profile import HyperflexNodeProfile
    from openapi_client.model.hyperflex_proxy_setting_policy import HyperflexProxySettingPolicy
    from openapi_client.model.hyperflex_server_firmware_version import HyperflexServerFirmwareVersion
    from openapi_client.model.hyperflex_server_model import HyperflexServerModel
    from openapi_client.model.hyperflex_software_version_policy import HyperflexSoftwareVersionPolicy
    from openapi_client.model.hyperflex_sys_config_policy import HyperflexSysConfigPolicy
    from openapi_client.model.hyperflex_ucsm_config_policy import HyperflexUcsmConfigPolicy
    from openapi_client.model.hyperflex_vcenter_config_policy import HyperflexVcenterConfigPolicy
    from openapi_client.model.iaas_connector_pack import IaasConnectorPack
    from openapi_client.model.iaas_device_status import IaasDeviceStatus
    from openapi_client.model.iaas_license_info import IaasLicenseInfo
    from openapi_client.model.iaas_most_run_tasks import IaasMostRunTasks
    from openapi_client.model.iaas_ucsd_info import IaasUcsdInfo
    from openapi_client.model.iaas_ucsd_managed_infra import IaasUcsdManagedInfra
    from openapi_client.model.iam_account import IamAccount
    from openapi_client.model.iam_account_experience import IamAccountExperience
    from openapi_client.model.iam_api_key import IamApiKey
    from openapi_client.model.iam_app_registration import IamAppRegistration
    from openapi_client.model.iam_certificate import IamCertificate
    from openapi_client.model.iam_certificate_request import IamCertificateRequest
    from openapi_client.model.iam_domain_group import IamDomainGroup
    from openapi_client.model.iam_end_point_privilege import IamEndPointPrivilege
    from openapi_client.model.iam_end_point_role import IamEndPointRole
    from openapi_client.model.iam_end_point_user import IamEndPointUser
    from openapi_client.model.iam_end_point_user_policy import IamEndPointUserPolicy
    from openapi_client.model.iam_end_point_user_role import IamEndPointUserRole
    from openapi_client.model.iam_idp import IamIdp
    from openapi_client.model.iam_idp_reference import IamIdpReference
    from openapi_client.model.iam_ldap_group import IamLdapGroup
    from openapi_client.model.iam_ldap_policy import IamLdapPolicy
    from openapi_client.model.iam_ldap_provider import IamLdapProvider
    from openapi_client.model.iam_local_user_password import IamLocalUserPassword
    from openapi_client.model.iam_o_auth_token import IamOAuthToken
    from openapi_client.model.iam_permission import IamPermission
    from openapi_client.model.iam_private_key_spec import IamPrivateKeySpec
    from openapi_client.model.iam_privilege import IamPrivilege
    from openapi_client.model.iam_privilege_set import IamPrivilegeSet
    from openapi_client.model.iam_qualifier import IamQualifier
    from openapi_client.model.iam_resource_limits import IamResourceLimits
    from openapi_client.model.iam_resource_permission import IamResourcePermission
    from openapi_client.model.iam_resource_roles import IamResourceRoles
    from openapi_client.model.iam_role import IamRole
    from openapi_client.model.iam_security_holder import IamSecurityHolder
    from openapi_client.model.iam_service_provider import IamServiceProvider
    from openapi_client.model.iam_session import IamSession
    from openapi_client.model.iam_session_limits import IamSessionLimits
    from openapi_client.model.iam_system import IamSystem
    from openapi_client.model.iam_trust_point import IamTrustPoint
    from openapi_client.model.iam_user import IamUser
    from openapi_client.model.iam_user_group import IamUserGroup
    from openapi_client.model.iam_user_preference import IamUserPreference
    from openapi_client.model.inventory_base import InventoryBase
    from openapi_client.model.inventory_device_info import InventoryDeviceInfo
    from openapi_client.model.inventory_dn_mo_binding import InventoryDnMoBinding
    from openapi_client.model.inventory_generic_inventory import InventoryGenericInventory
    from openapi_client.model.inventory_generic_inventory_holder import InventoryGenericInventoryHolder
    from openapi_client.model.inventory_request import InventoryRequest
    from openapi_client.model.inventory_uem_connection import InventoryUemConnection
    from openapi_client.model.ipmioverlan_policy import IpmioverlanPolicy
    from openapi_client.model.ippool_ip_lease import IppoolIpLease
    from openapi_client.model.ippool_pool import IppoolPool
    from openapi_client.model.ippool_pool_member import IppoolPoolMember
    from openapi_client.model.ippool_shadow_block import IppoolShadowBlock
    from openapi_client.model.ippool_shadow_pool import IppoolShadowPool
    from openapi_client.model.ippool_universe import IppoolUniverse
    from openapi_client.model.kvm_kvm_session import KvmKvmSession
    from openapi_client.model.kvm_policy import KvmPolicy
    from openapi_client.model.license_account_license_data import LicenseAccountLicenseData
    from openapi_client.model.license_customer_op import LicenseCustomerOp
    from openapi_client.model.license_license_info import LicenseLicenseInfo
    from openapi_client.model.license_license_reservation_op import LicenseLicenseReservationOp
    from openapi_client.model.license_smartlicense_token import LicenseSmartlicenseToken
    from openapi_client.model.ls_service_profile import LsServiceProfile
    from openapi_client.model.macpool_id_block import MacpoolIdBlock
    from openapi_client.model.macpool_lease import MacpoolLease
    from openapi_client.model.macpool_pool import MacpoolPool
    from openapi_client.model.macpool_pool_member import MacpoolPoolMember
    from openapi_client.model.macpool_universe import MacpoolUniverse
    from openapi_client.model.management_controller import ManagementController
    from openapi_client.model.management_entity import ManagementEntity
    from openapi_client.model.management_interface import ManagementInterface
    from openapi_client.model.memory_abstract_unit import MemoryAbstractUnit
    from openapi_client.model.memory_array import MemoryArray
    from openapi_client.model.memory_persistent_memory_config_result import MemoryPersistentMemoryConfigResult
    from openapi_client.model.memory_persistent_memory_configuration import MemoryPersistentMemoryConfiguration
    from openapi_client.model.memory_persistent_memory_namespace import MemoryPersistentMemoryNamespace
    from openapi_client.model.memory_persistent_memory_namespace_config_result import MemoryPersistentMemoryNamespaceConfigResult
    from openapi_client.model.memory_persistent_memory_policy import MemoryPersistentMemoryPolicy
    from openapi_client.model.memory_persistent_memory_region import MemoryPersistentMemoryRegion
    from openapi_client.model.memory_persistent_memory_unit import MemoryPersistentMemoryUnit
    from openapi_client.model.memory_unit import MemoryUnit
    from openapi_client.model.meta_definition import MetaDefinition
    from openapi_client.model.mo_base_mo_relationship import MoBaseMoRelationship
    from openapi_client.model.mo_tag import MoTag
    from openapi_client.model.mo_version_context import MoVersionContext
    from openapi_client.model.network_element import NetworkElement
    from openapi_client.model.network_element_summary import NetworkElementSummary
    from openapi_client.model.network_fc_zone_info import NetworkFcZoneInfo
    from openapi_client.model.network_vlan_port_info import NetworkVlanPortInfo
    from openapi_client.model.networkconfig_policy import NetworkconfigPolicy
    from openapi_client.model.niaapi_apic_cco_post import NiaapiApicCcoPost
    from openapi_client.model.niaapi_apic_field_notice import NiaapiApicFieldNotice
    from openapi_client.model.niaapi_apic_hweol import NiaapiApicHweol
    from openapi_client.model.niaapi_apic_latest_maintained_release import NiaapiApicLatestMaintainedRelease
    from openapi_client.model.niaapi_apic_release_recommend import NiaapiApicReleaseRecommend
    from openapi_client.model.niaapi_apic_sweol import NiaapiApicSweol
    from openapi_client.model.niaapi_dcnm_cco_post import NiaapiDcnmCcoPost
    from openapi_client.model.niaapi_dcnm_field_notice import NiaapiDcnmFieldNotice
    from openapi_client.model.niaapi_dcnm_hweol import NiaapiDcnmHweol
    from openapi_client.model.niaapi_dcnm_latest_maintained_release import NiaapiDcnmLatestMaintainedRelease
    from openapi_client.model.niaapi_dcnm_release_recommend import NiaapiDcnmReleaseRecommend
    from openapi_client.model.niaapi_dcnm_sweol import NiaapiDcnmSweol
    from openapi_client.model.niaapi_field_notice import NiaapiFieldNotice
    from openapi_client.model.niaapi_file_downloader import NiaapiFileDownloader
    from openapi_client.model.niaapi_hardware_eol import NiaapiHardwareEol
    from openapi_client.model.niaapi_maintained_release import NiaapiMaintainedRelease
    from openapi_client.model.niaapi_new_release_post import NiaapiNewReleasePost
    from openapi_client.model.niaapi_nia_metadata import NiaapiNiaMetadata
    from openapi_client.model.niaapi_release_recommend import NiaapiReleaseRecommend
    from openapi_client.model.niaapi_software_eol import NiaapiSoftwareEol
    from openapi_client.model.niaapi_version_regex import NiaapiVersionRegex
    from openapi_client.model.niatelemetry_nia_feature_usage import NiatelemetryNiaFeatureUsage
    from openapi_client.model.niatelemetry_nia_inventory import NiatelemetryNiaInventory
    from openapi_client.model.niatelemetry_nia_license_state import NiatelemetryNiaLicenseState
    from openapi_client.model.ntp_policy import NtpPolicy
    from openapi_client.model.organization_organization import OrganizationOrganization
    from openapi_client.model.os_base_install_config import OsBaseInstallConfig
    from openapi_client.model.os_catalog import OsCatalog
    from openapi_client.model.os_configuration_file import OsConfigurationFile
    from openapi_client.model.os_distribution import OsDistribution
    from openapi_client.model.os_install import OsInstall
    from openapi_client.model.os_os_support import OsOsSupport
    from openapi_client.model.os_template_file import OsTemplateFile
    from openapi_client.model.pci_coprocessor_card import PciCoprocessorCard
    from openapi_client.model.pci_device import PciDevice
    from openapi_client.model.pci_link import PciLink
    from openapi_client.model.pci_switch import PciSwitch
    from openapi_client.model.policy_abstract_config_change_detail import PolicyAbstractConfigChangeDetail
    from openapi_client.model.policy_abstract_config_profile import PolicyAbstractConfigProfile
    from openapi_client.model.policy_abstract_config_result import PolicyAbstractConfigResult
    from openapi_client.model.policy_abstract_config_result_entry import PolicyAbstractConfigResultEntry
    from openapi_client.model.policy_abstract_policy import PolicyAbstractPolicy
    from openapi_client.model.policy_abstract_profile import PolicyAbstractProfile
    from openapi_client.model.policyinventory_abstract_device_info import PolicyinventoryAbstractDeviceInfo
    from openapi_client.model.pool_abstract_block import PoolAbstractBlock
    from openapi_client.model.pool_abstract_pool import PoolAbstractPool
    from openapi_client.model.pool_abstract_pool_member import PoolAbstractPoolMember
    from openapi_client.model.port_group import PortGroup
    from openapi_client.model.port_interface_base import PortInterfaceBase
    from openapi_client.model.port_mac_binding import PortMacBinding
    from openapi_client.model.port_physical import PortPhysical
    from openapi_client.model.port_sub_group import PortSubGroup
    from openapi_client.model.processor_unit import ProcessorUnit
    from openapi_client.model.recovery_abstract_backup_config import RecoveryAbstractBackupConfig
    from openapi_client.model.recovery_abstract_backup_info import RecoveryAbstractBackupInfo
    from openapi_client.model.recovery_backup_config_policy import RecoveryBackupConfigPolicy
    from openapi_client.model.recovery_backup_profile import RecoveryBackupProfile
    from openapi_client.model.recovery_config_result import RecoveryConfigResult
    from openapi_client.model.recovery_config_result_entry import RecoveryConfigResultEntry
    from openapi_client.model.recovery_on_demand_backup import RecoveryOnDemandBackup
    from openapi_client.model.recovery_restore import RecoveryRestore
    from openapi_client.model.recovery_schedule_config_policy import RecoveryScheduleConfigPolicy
    from openapi_client.model.resource_group import ResourceGroup
    from openapi_client.model.resource_group_member import ResourceGroupMember
    from openapi_client.model.resource_license_resource_count import ResourceLicenseResourceCount
    from openapi_client.model.resource_membership import ResourceMembership
    from openapi_client.model.resource_membership_holder import ResourceMembershipHolder
    from openapi_client.model.sdcard_policy import SdcardPolicy
    from openapi_client.model.sdwan_profile import SdwanProfile
    from openapi_client.model.sdwan_router_node import SdwanRouterNode
    from openapi_client.model.sdwan_router_policy import SdwanRouterPolicy
    from openapi_client.model.sdwan_vmanage_account_policy import SdwanVmanageAccountPolicy
    from openapi_client.model.search_search_item import SearchSearchItem
    from openapi_client.model.search_suggest_item import SearchSuggestItem
    from openapi_client.model.search_tag_item import SearchTagItem
    from openapi_client.model.security_unit import SecurityUnit
    from openapi_client.model.server_config_change_detail import ServerConfigChangeDetail
    from openapi_client.model.server_config_import import ServerConfigImport
    from openapi_client.model.server_config_result import ServerConfigResult
    from openapi_client.model.server_config_result_entry import ServerConfigResultEntry
    from openapi_client.model.server_profile import ServerProfile
    from openapi_client.model.smtp_policy import SmtpPolicy
    from openapi_client.model.snmp_policy import SnmpPolicy
    from openapi_client.model.software_appliance_distributable import SoftwareApplianceDistributable
    from openapi_client.model.software_hcl_meta import SoftwareHclMeta
    from openapi_client.model.software_hyperflex_bundle_distributable import SoftwareHyperflexBundleDistributable
    from openapi_client.model.software_hyperflex_distributable import SoftwareHyperflexDistributable
    from openapi_client.model.software_solution_distributable import SoftwareSolutionDistributable
    from openapi_client.model.softwarerepository_authorization import SoftwarerepositoryAuthorization
    from openapi_client.model.softwarerepository_cached_image import SoftwarerepositoryCachedImage
    from openapi_client.model.softwarerepository_catalog import SoftwarerepositoryCatalog
    from openapi_client.model.softwarerepository_category_mapper import SoftwarerepositoryCategoryMapper
    from openapi_client.model.softwarerepository_category_mapper_model import SoftwarerepositoryCategoryMapperModel
    from openapi_client.model.softwarerepository_download_spec import SoftwarerepositoryDownloadSpec
    from openapi_client.model.softwarerepository_file import SoftwarerepositoryFile
    from openapi_client.model.softwarerepository_operating_system_file import SoftwarerepositoryOperatingSystemFile
    from openapi_client.model.softwarerepository_release import SoftwarerepositoryRelease
    from openapi_client.model.sol_policy import SolPolicy
    from openapi_client.model.ssh_policy import SshPolicy
    from openapi_client.model.storage_base_array import StorageBaseArray
    from openapi_client.model.storage_base_array_controller import StorageBaseArrayController
    from openapi_client.model.storage_base_array_disk import StorageBaseArrayDisk
    from openapi_client.model.storage_base_host import StorageBaseHost
    from openapi_client.model.storage_base_host_group import StorageBaseHostGroup
    from openapi_client.model.storage_base_host_lun import StorageBaseHostLun
    from openapi_client.model.storage_base_physical_port import StorageBasePhysicalPort
    from openapi_client.model.storage_base_protection_group import StorageBaseProtectionGroup
    from openapi_client.model.storage_base_protection_group_snapshot import StorageBaseProtectionGroupSnapshot
    from openapi_client.model.storage_base_replication_schedule import StorageBaseReplicationSchedule
    from openapi_client.model.storage_base_snapshot import StorageBaseSnapshot
    from openapi_client.model.storage_base_snapshot_schedule import StorageBaseSnapshotSchedule
    from openapi_client.model.storage_base_volume import StorageBaseVolume
    from openapi_client.model.storage_controller import StorageController
    from openapi_client.model.storage_disk_group import StorageDiskGroup
    from openapi_client.model.storage_disk_group_policy import StorageDiskGroupPolicy
    from openapi_client.model.storage_enclosure import StorageEnclosure
    from openapi_client.model.storage_enclosure_disk import StorageEnclosureDisk
    from openapi_client.model.storage_enclosure_disk_slot_ep import StorageEnclosureDiskSlotEp
    from openapi_client.model.storage_flex_flash_controller import StorageFlexFlashController
    from openapi_client.model.storage_flex_flash_controller_props import StorageFlexFlashControllerProps
    from openapi_client.model.storage_flex_flash_physical_drive import StorageFlexFlashPhysicalDrive
    from openapi_client.model.storage_flex_flash_virtual_drive import StorageFlexFlashVirtualDrive
    from openapi_client.model.storage_flex_util_controller import StorageFlexUtilController
    from openapi_client.model.storage_flex_util_physical_drive import StorageFlexUtilPhysicalDrive
    from openapi_client.model.storage_flex_util_virtual_drive import StorageFlexUtilVirtualDrive
    from openapi_client.model.storage_item import StorageItem
    from openapi_client.model.storage_physical_disk import StoragePhysicalDisk
    from openapi_client.model.storage_physical_disk_extension import StoragePhysicalDiskExtension
    from openapi_client.model.storage_physical_disk_usage import StoragePhysicalDiskUsage
    from openapi_client.model.storage_pure_array import StoragePureArray
    from openapi_client.model.storage_pure_controller import StoragePureController
    from openapi_client.model.storage_pure_disk import StoragePureDisk
    from openapi_client.model.storage_pure_host import StoragePureHost
    from openapi_client.model.storage_pure_host_group import StoragePureHostGroup
    from openapi_client.model.storage_pure_host_lun import StoragePureHostLun
    from openapi_client.model.storage_pure_port import StoragePurePort
    from openapi_client.model.storage_pure_protection_group import StoragePureProtectionGroup
    from openapi_client.model.storage_pure_protection_group_snapshot import StoragePureProtectionGroupSnapshot
    from openapi_client.model.storage_pure_replication_schedule import StoragePureReplicationSchedule
    from openapi_client.model.storage_pure_snapshot_schedule import StoragePureSnapshotSchedule
    from openapi_client.model.storage_pure_volume import StoragePureVolume
    from openapi_client.model.storage_pure_volume_snapshot import StoragePureVolumeSnapshot
    from openapi_client.model.storage_sas_expander import StorageSasExpander
    from openapi_client.model.storage_sas_port import StorageSasPort
    from openapi_client.model.storage_span import StorageSpan
    from openapi_client.model.storage_storage_policy import StorageStoragePolicy
    from openapi_client.model.storage_vd_member_ep import StorageVdMemberEp
    from openapi_client.model.storage_virtual_drive import StorageVirtualDrive
    from openapi_client.model.storage_virtual_drive_extension import StorageVirtualDriveExtension
    from openapi_client.model.syslog_policy import SyslogPolicy
    from openapi_client.model.tam_advisory_count import TamAdvisoryCount
    from openapi_client.model.tam_advisory_definition import TamAdvisoryDefinition
    from openapi_client.model.tam_advisory_info import TamAdvisoryInfo
    from openapi_client.model.tam_advisory_instance import TamAdvisoryInstance
    from openapi_client.model.tam_base_advisory import TamBaseAdvisory
    from openapi_client.model.tam_security_advisory import TamSecurityAdvisory
    from openapi_client.model.task_pure_scoped_inventory import TaskPureScopedInventory
    from openapi_client.model.techsupportmanagement_download import TechsupportmanagementDownload
    from openapi_client.model.techsupportmanagement_tech_support_bundle import TechsupportmanagementTechSupportBundle
    from openapi_client.model.techsupportmanagement_tech_support_status import TechsupportmanagementTechSupportStatus
    from openapi_client.model.terminal_audit_log import TerminalAuditLog
    from openapi_client.model.top_system import TopSystem
    from openapi_client.model.ucsd_backup_info import UcsdBackupInfo
    from openapi_client.model.uuidpool_block import UuidpoolBlock
    from openapi_client.model.uuidpool_pool import UuidpoolPool
    from openapi_client.model.uuidpool_pool_member import UuidpoolPoolMember
    from openapi_client.model.uuidpool_universe import UuidpoolUniverse
    from openapi_client.model.uuidpool_uuid_lease import UuidpoolUuidLease
    from openapi_client.model.views_view import ViewsView
    from openapi_client.model.virtualization_base_cluster import VirtualizationBaseCluster
    from openapi_client.model.virtualization_base_datacenter import VirtualizationBaseDatacenter
    from openapi_client.model.virtualization_base_datastore import VirtualizationBaseDatastore
    from openapi_client.model.virtualization_base_host import VirtualizationBaseHost
    from openapi_client.model.virtualization_base_hypervisor_manager import VirtualizationBaseHypervisorManager
    from openapi_client.model.virtualization_base_source_device import VirtualizationBaseSourceDevice
    from openapi_client.model.virtualization_base_virtual_machine import VirtualizationBaseVirtualMachine
    from openapi_client.model.virtualization_vmware_cluster import VirtualizationVmwareCluster
    from openapi_client.model.virtualization_vmware_datacenter import VirtualizationVmwareDatacenter
    from openapi_client.model.virtualization_vmware_datastore import VirtualizationVmwareDatastore
    from openapi_client.model.virtualization_vmware_host import VirtualizationVmwareHost
    from openapi_client.model.virtualization_vmware_vcenter import VirtualizationVmwareVcenter
    from openapi_client.model.virtualization_vmware_virtual_machine import VirtualizationVmwareVirtualMachine
    from openapi_client.model.vmedia_policy import VmediaPolicy
    from openapi_client.model.vnic_eth_adapter_policy import VnicEthAdapterPolicy
    from openapi_client.model.vnic_eth_if import VnicEthIf
    from openapi_client.model.vnic_eth_network_policy import VnicEthNetworkPolicy
    from openapi_client.model.vnic_eth_qos_policy import VnicEthQosPolicy
    from openapi_client.model.vnic_fc_adapter_policy import VnicFcAdapterPolicy
    from openapi_client.model.vnic_fc_if import VnicFcIf
    from openapi_client.model.vnic_fc_network_policy import VnicFcNetworkPolicy
    from openapi_client.model.vnic_fc_qos_policy import VnicFcQosPolicy
    from openapi_client.model.vnic_lan_connectivity_policy import VnicLanConnectivityPolicy
    from openapi_client.model.vnic_san_connectivity_policy import VnicSanConnectivityPolicy
    from openapi_client.model.vrf_vrf import VrfVrf
    from openapi_client.model.workflow_batch_api_executor import WorkflowBatchApiExecutor
    from openapi_client.model.workflow_build_task_meta import WorkflowBuildTaskMeta
    from openapi_client.model.workflow_build_task_meta_owner import WorkflowBuildTaskMetaOwner
    from openapi_client.model.workflow_catalog import WorkflowCatalog
    from openapi_client.model.workflow_custom_data_type_definition import WorkflowCustomDataTypeDefinition
    from openapi_client.model.workflow_error_response_handler import WorkflowErrorResponseHandler
    from openapi_client.model.workflow_pending_dynamic_workflow_info import WorkflowPendingDynamicWorkflowInfo
    from openapi_client.model.workflow_task_definition import WorkflowTaskDefinition
    from openapi_client.model.workflow_task_info import WorkflowTaskInfo
    from openapi_client.model.workflow_workflow_definition import WorkflowWorkflowDefinition
    from openapi_client.model.workflow_workflow_info import WorkflowWorkflowInfo
    from openapi_client.model.workflow_workflow_meta import WorkflowWorkflowMeta
    globals()['AaaAbstractAuditRecord'] = AaaAbstractAuditRecord
    globals()['AaaAuditRecord'] = AaaAuditRecord
    globals()['AccessPolicy'] = AccessPolicy
    globals()['AdapterConfigPolicy'] = AdapterConfigPolicy
    globals()['AdapterExtEthInterface'] = AdapterExtEthInterface
    globals()['AdapterHostEthInterface'] = AdapterHostEthInterface
    globals()['AdapterHostFcInterface'] = AdapterHostFcInterface
    globals()['AdapterHostIscsiInterface'] = AdapterHostIscsiInterface
    globals()['AdapterUnit'] = AdapterUnit
    globals()['ApplianceBackup'] = ApplianceBackup
    globals()['ApplianceBackupBase'] = ApplianceBackupBase
    globals()['ApplianceBackupPolicy'] = ApplianceBackupPolicy
    globals()['ApplianceCertificateSetting'] = ApplianceCertificateSetting
    globals()['ApplianceDataExportPolicy'] = ApplianceDataExportPolicy
    globals()['ApplianceDeviceClaim'] = ApplianceDeviceClaim
    globals()['ApplianceDiagSetting'] = ApplianceDiagSetting
    globals()['ApplianceImageBundle'] = ApplianceImageBundle
    globals()['ApplianceNodeInfo'] = ApplianceNodeInfo
    globals()['ApplianceReleaseNote'] = ApplianceReleaseNote
    globals()['ApplianceRestore'] = ApplianceRestore
    globals()['ApplianceSetupInfo'] = ApplianceSetupInfo
    globals()['ApplianceSystemInfo'] = ApplianceSystemInfo
    globals()['ApplianceUpgrade'] = ApplianceUpgrade
    globals()['ApplianceUpgradePolicy'] = ApplianceUpgradePolicy
    globals()['AssetClusterMember'] = AssetClusterMember
    globals()['AssetDeviceClaim'] = AssetDeviceClaim
    globals()['AssetDeviceConfiguration'] = AssetDeviceConfiguration
    globals()['AssetDeviceConnection'] = AssetDeviceConnection
    globals()['AssetDeviceConnectorManager'] = AssetDeviceConnectorManager
    globals()['AssetDeviceContractInformation'] = AssetDeviceContractInformation
    globals()['AssetDeviceRegistration'] = AssetDeviceRegistration
    globals()['AssetManagedDevice'] = AssetManagedDevice
    globals()['AssetTarget'] = AssetTarget
    globals()['BiosBootDevice'] = BiosBootDevice
    globals()['BiosBootMode'] = BiosBootMode
    globals()['BiosPolicy'] = BiosPolicy
    globals()['BiosSystemBootOrder'] = BiosSystemBootOrder
    globals()['BiosUnit'] = BiosUnit
    globals()['BootDeviceBootMode'] = BootDeviceBootMode
    globals()['BootPrecisionPolicy'] = BootPrecisionPolicy
    globals()['CapabilityAdapterUnitDescriptor'] = CapabilityAdapterUnitDescriptor
    globals()['CapabilityCapability'] = CapabilityCapability
    globals()['CapabilityChassisDescriptor'] = CapabilityChassisDescriptor
    globals()['CapabilityChassisManufacturingDef'] = CapabilityChassisManufacturingDef
    globals()['CapabilityEndpointDescriptor'] = CapabilityEndpointDescriptor
    globals()['CapabilityEquipmentPhysicalDef'] = CapabilityEquipmentPhysicalDef
    globals()['CapabilityEquipmentSlotArray'] = CapabilityEquipmentSlotArray
    globals()['CapabilityFanModuleDescriptor'] = CapabilityFanModuleDescriptor
    globals()['CapabilityFanModuleManufacturingDef'] = CapabilityFanModuleManufacturingDef
    globals()['CapabilityHardwareDescriptor'] = CapabilityHardwareDescriptor
    globals()['CapabilityIoCardCapabilityDef'] = CapabilityIoCardCapabilityDef
    globals()['CapabilityIoCardDescriptor'] = CapabilityIoCardDescriptor
    globals()['CapabilityIoCardManufacturingDef'] = CapabilityIoCardManufacturingDef
    globals()['CapabilityPortGroupAggregationDef'] = CapabilityPortGroupAggregationDef
    globals()['CapabilityPsuDescriptor'] = CapabilityPsuDescriptor
    globals()['CapabilityPsuManufacturingDef'] = CapabilityPsuManufacturingDef
    globals()['CapabilitySection'] = CapabilitySection
    globals()['CapabilitySiocModuleCapabilityDef'] = CapabilitySiocModuleCapabilityDef
    globals()['CapabilitySiocModuleDescriptor'] = CapabilitySiocModuleDescriptor
    globals()['CapabilitySiocModuleManufacturingDef'] = CapabilitySiocModuleManufacturingDef
    globals()['CapabilitySwitchCapability'] = CapabilitySwitchCapability
    globals()['CapabilitySwitchCapabilityDef'] = CapabilitySwitchCapabilityDef
    globals()['CapabilitySwitchDescriptor'] = CapabilitySwitchDescriptor
    globals()['CapabilitySwitchManufacturingDef'] = CapabilitySwitchManufacturingDef
    globals()['ComputeBlade'] = ComputeBlade
    globals()['ComputeBladeIdentity'] = ComputeBladeIdentity
    globals()['ComputeBoard'] = ComputeBoard
    globals()['ComputePhysical'] = ComputePhysical
    globals()['ComputePhysicalSummary'] = ComputePhysicalSummary
    globals()['ComputeRackUnit'] = ComputeRackUnit
    globals()['ComputeRackUnitIdentity'] = ComputeRackUnitIdentity
    globals()['ComputeServerSetting'] = ComputeServerSetting
    globals()['CondAlarm'] = CondAlarm
    globals()['CondHclStatus'] = CondHclStatus
    globals()['CondHclStatusDetail'] = CondHclStatusDetail
    globals()['CondHclStatusJob'] = CondHclStatusJob
    globals()['ConfigExportedItem'] = ConfigExportedItem
    globals()['ConfigExporter'] = ConfigExporter
    globals()['ConfigImportedItem'] = ConfigImportedItem
    globals()['ConfigImporter'] = ConfigImporter
    globals()['ConnectorDownloadStatus'] = ConnectorDownloadStatus
    globals()['ConnectorScopedInventory'] = ConnectorScopedInventory
    globals()['ConnectorpackConnectorPackUpgrade'] = ConnectorpackConnectorPackUpgrade
    globals()['ConnectorpackUpgradeImpact'] = ConnectorpackUpgradeImpact
    globals()['DeviceconnectorPolicy'] = DeviceconnectorPolicy
    globals()['DisplayNames'] = DisplayNames
    globals()['EquipmentAbstractDevice'] = EquipmentAbstractDevice
    globals()['EquipmentBase'] = EquipmentBase
    globals()['EquipmentChassis'] = EquipmentChassis
    globals()['EquipmentChassisIdentity'] = EquipmentChassisIdentity
    globals()['EquipmentDeviceSummary'] = EquipmentDeviceSummary
    globals()['EquipmentFan'] = EquipmentFan
    globals()['EquipmentFanModule'] = EquipmentFanModule
    globals()['EquipmentFex'] = EquipmentFex
    globals()['EquipmentFexIdentity'] = EquipmentFexIdentity
    globals()['EquipmentFexOperation'] = EquipmentFexOperation
    globals()['EquipmentIdentity'] = EquipmentIdentity
    globals()['EquipmentIdentitySummary'] = EquipmentIdentitySummary
    globals()['EquipmentIoCard'] = EquipmentIoCard
    globals()['EquipmentIoCardBase'] = EquipmentIoCardBase
    globals()['EquipmentIoCardOperation'] = EquipmentIoCardOperation
    globals()['EquipmentIoExpander'] = EquipmentIoExpander
    globals()['EquipmentLocatorLed'] = EquipmentLocatorLed
    globals()['EquipmentPhysicalIdentity'] = EquipmentPhysicalIdentity
    globals()['EquipmentPsu'] = EquipmentPsu
    globals()['EquipmentPsuControl'] = EquipmentPsuControl
    globals()['EquipmentRackEnclosure'] = EquipmentRackEnclosure
    globals()['EquipmentRackEnclosureSlot'] = EquipmentRackEnclosureSlot
    globals()['EquipmentSharedIoModule'] = EquipmentSharedIoModule
    globals()['EquipmentSwitchCard'] = EquipmentSwitchCard
    globals()['EquipmentSystemIoController'] = EquipmentSystemIoController
    globals()['EquipmentTpm'] = EquipmentTpm
    globals()['EquipmentTransceiver'] = EquipmentTransceiver
    globals()['EtherHostPort'] = EtherHostPort
    globals()['EtherNetworkPort'] = EtherNetworkPort
    globals()['EtherPhysicalPort'] = EtherPhysicalPort
    globals()['EtherPhysicalPortBase'] = EtherPhysicalPortBase
    globals()['EtherPortChannel'] = EtherPortChannel
    globals()['ExternalsiteAuthorization'] = ExternalsiteAuthorization
    globals()['FabricConfigChangeDetail'] = FabricConfigChangeDetail
    globals()['FabricConfigResult'] = FabricConfigResult
    globals()['FabricConfigResultEntry'] = FabricConfigResultEntry
    globals()['FabricEthNetworkControlPolicy'] = FabricEthNetworkControlPolicy
    globals()['FabricEthNetworkPolicy'] = FabricEthNetworkPolicy
    globals()['FabricFcNetworkPolicy'] = FabricFcNetworkPolicy
    globals()['FabricFcUplinkPcRole'] = FabricFcUplinkPcRole
    globals()['FabricFcUplinkRole'] = FabricFcUplinkRole
    globals()['FabricFcoeUplinkPcRole'] = FabricFcoeUplinkPcRole
    globals()['FabricFcoeUplinkRole'] = FabricFcoeUplinkRole
    globals()['FabricPcMember'] = FabricPcMember
    globals()['FabricPcOperation'] = FabricPcOperation
    globals()['FabricPortBase'] = FabricPortBase
    globals()['FabricPortChannelRole'] = FabricPortChannelRole
    globals()['FabricPortMode'] = FabricPortMode
    globals()['FabricPortOperation'] = FabricPortOperation
    globals()['FabricPortPolicy'] = FabricPortPolicy
    globals()['FabricPortRole'] = FabricPortRole
    globals()['FabricQosPolicy'] = FabricQosPolicy
    globals()['FabricServerRole'] = FabricServerRole
    globals()['FabricSwitchClusterProfile'] = FabricSwitchClusterProfile
    globals()['FabricSwitchProfile'] = FabricSwitchProfile
    globals()['FabricUplinkPcRole'] = FabricUplinkPcRole
    globals()['FabricUplinkRole'] = FabricUplinkRole
    globals()['FabricVlan'] = FabricVlan
    globals()['FabricVsan'] = FabricVsan
    globals()['FaultInstance'] = FaultInstance
    globals()['FcPhysicalPort'] = FcPhysicalPort
    globals()['FcPortChannel'] = FcPortChannel
    globals()['FcpoolFcBlock'] = FcpoolFcBlock
    globals()['FcpoolLease'] = FcpoolLease
    globals()['FcpoolPool'] = FcpoolPool
    globals()['FcpoolPoolMember'] = FcpoolPoolMember
    globals()['FcpoolUniverse'] = FcpoolUniverse
    globals()['FeedbackFeedbackPost'] = FeedbackFeedbackPost
    globals()['FirmwareBaseDistributable'] = FirmwareBaseDistributable
    globals()['FirmwareBiosDescriptor'] = FirmwareBiosDescriptor
    globals()['FirmwareBoardControllerDescriptor'] = FirmwareBoardControllerDescriptor
    globals()['FirmwareChassisUpgrade'] = FirmwareChassisUpgrade
    globals()['FirmwareCimcDescriptor'] = FirmwareCimcDescriptor
    globals()['FirmwareComponentDescriptor'] = FirmwareComponentDescriptor
    globals()['FirmwareDimmDescriptor'] = FirmwareDimmDescriptor
    globals()['FirmwareDistributable'] = FirmwareDistributable
    globals()['FirmwareDistributableMeta'] = FirmwareDistributableMeta
    globals()['FirmwareDriveDescriptor'] = FirmwareDriveDescriptor
    globals()['FirmwareDriverDistributable'] = FirmwareDriverDistributable
    globals()['FirmwareEula'] = FirmwareEula
    globals()['FirmwareFirmwareSummary'] = FirmwareFirmwareSummary
    globals()['FirmwareGpuDescriptor'] = FirmwareGpuDescriptor
    globals()['FirmwareHbaDescriptor'] = FirmwareHbaDescriptor
    globals()['FirmwareIomDescriptor'] = FirmwareIomDescriptor
    globals()['FirmwareMswitchDescriptor'] = FirmwareMswitchDescriptor
    globals()['FirmwareNxosDescriptor'] = FirmwareNxosDescriptor
    globals()['FirmwarePcieDescriptor'] = FirmwarePcieDescriptor
    globals()['FirmwarePsuDescriptor'] = FirmwarePsuDescriptor
    globals()['FirmwareRunningFirmware'] = FirmwareRunningFirmware
    globals()['FirmwareSasExpanderDescriptor'] = FirmwareSasExpanderDescriptor
    globals()['FirmwareServerConfigurationUtilityDistributable'] = FirmwareServerConfigurationUtilityDistributable
    globals()['FirmwareStorageControllerDescriptor'] = FirmwareStorageControllerDescriptor
    globals()['FirmwareSwitchUpgrade'] = FirmwareSwitchUpgrade
    globals()['FirmwareUpgrade'] = FirmwareUpgrade
    globals()['FirmwareUpgradeBase'] = FirmwareUpgradeBase
    globals()['FirmwareUpgradeImpact'] = FirmwareUpgradeImpact
    globals()['FirmwareUpgradeImpactBase'] = FirmwareUpgradeImpactBase
    globals()['FirmwareUpgradeImpactStatus'] = FirmwareUpgradeImpactStatus
    globals()['FirmwareUpgradeStatus'] = FirmwareUpgradeStatus
    globals()['ForecastCatalog'] = ForecastCatalog
    globals()['ForecastDefinition'] = ForecastDefinition
    globals()['ForecastInstance'] = ForecastInstance
    globals()['GraphicsCard'] = GraphicsCard
    globals()['GraphicsController'] = GraphicsController
    globals()['HclCompatibilityStatus'] = HclCompatibilityStatus
    globals()['HclDriverImage'] = HclDriverImage
    globals()['HclExemptedCatalog'] = HclExemptedCatalog
    globals()['HclHyperflexSoftwareCompatibilityInfo'] = HclHyperflexSoftwareCompatibilityInfo
    globals()['HclOperatingSystem'] = HclOperatingSystem
    globals()['HclOperatingSystemVendor'] = HclOperatingSystemVendor
    globals()['HclServiceStatus'] = HclServiceStatus
    globals()['HclSupportedDriverName'] = HclSupportedDriverName
    globals()['HyperflexAlarm'] = HyperflexAlarm
    globals()['HyperflexAppCatalog'] = HyperflexAppCatalog
    globals()['HyperflexAutoSupportPolicy'] = HyperflexAutoSupportPolicy
    globals()['HyperflexCapabilityInfo'] = HyperflexCapabilityInfo
    globals()['HyperflexCluster'] = HyperflexCluster
    globals()['HyperflexClusterNetworkPolicy'] = HyperflexClusterNetworkPolicy
    globals()['HyperflexClusterProfile'] = HyperflexClusterProfile
    globals()['HyperflexClusterStoragePolicy'] = HyperflexClusterStoragePolicy
    globals()['HyperflexConfigResult'] = HyperflexConfigResult
    globals()['HyperflexConfigResultEntry'] = HyperflexConfigResultEntry
    globals()['HyperflexExtFcStoragePolicy'] = HyperflexExtFcStoragePolicy
    globals()['HyperflexExtIscsiStoragePolicy'] = HyperflexExtIscsiStoragePolicy
    globals()['HyperflexFeatureLimitExternal'] = HyperflexFeatureLimitExternal
    globals()['HyperflexFeatureLimitInternal'] = HyperflexFeatureLimitInternal
    globals()['HyperflexHealth'] = HyperflexHealth
    globals()['HyperflexHxdpVersion'] = HyperflexHxdpVersion
    globals()['HyperflexLocalCredentialPolicy'] = HyperflexLocalCredentialPolicy
    globals()['HyperflexNode'] = HyperflexNode
    globals()['HyperflexNodeConfigPolicy'] = HyperflexNodeConfigPolicy
    globals()['HyperflexNodeProfile'] = HyperflexNodeProfile
    globals()['HyperflexProxySettingPolicy'] = HyperflexProxySettingPolicy
    globals()['HyperflexServerFirmwareVersion'] = HyperflexServerFirmwareVersion
    globals()['HyperflexServerModel'] = HyperflexServerModel
    globals()['HyperflexSoftwareVersionPolicy'] = HyperflexSoftwareVersionPolicy
    globals()['HyperflexSysConfigPolicy'] = HyperflexSysConfigPolicy
    globals()['HyperflexUcsmConfigPolicy'] = HyperflexUcsmConfigPolicy
    globals()['HyperflexVcenterConfigPolicy'] = HyperflexVcenterConfigPolicy
    globals()['IaasConnectorPack'] = IaasConnectorPack
    globals()['IaasDeviceStatus'] = IaasDeviceStatus
    globals()['IaasLicenseInfo'] = IaasLicenseInfo
    globals()['IaasMostRunTasks'] = IaasMostRunTasks
    globals()['IaasUcsdInfo'] = IaasUcsdInfo
    globals()['IaasUcsdManagedInfra'] = IaasUcsdManagedInfra
    globals()['IamAccount'] = IamAccount
    globals()['IamAccountExperience'] = IamAccountExperience
    globals()['IamApiKey'] = IamApiKey
    globals()['IamAppRegistration'] = IamAppRegistration
    globals()['IamCertificate'] = IamCertificate
    globals()['IamCertificateRequest'] = IamCertificateRequest
    globals()['IamDomainGroup'] = IamDomainGroup
    globals()['IamEndPointPrivilege'] = IamEndPointPrivilege
    globals()['IamEndPointRole'] = IamEndPointRole
    globals()['IamEndPointUser'] = IamEndPointUser
    globals()['IamEndPointUserPolicy'] = IamEndPointUserPolicy
    globals()['IamEndPointUserRole'] = IamEndPointUserRole
    globals()['IamIdp'] = IamIdp
    globals()['IamIdpReference'] = IamIdpReference
    globals()['IamLdapGroup'] = IamLdapGroup
    globals()['IamLdapPolicy'] = IamLdapPolicy
    globals()['IamLdapProvider'] = IamLdapProvider
    globals()['IamLocalUserPassword'] = IamLocalUserPassword
    globals()['IamOAuthToken'] = IamOAuthToken
    globals()['IamPermission'] = IamPermission
    globals()['IamPrivateKeySpec'] = IamPrivateKeySpec
    globals()['IamPrivilege'] = IamPrivilege
    globals()['IamPrivilegeSet'] = IamPrivilegeSet
    globals()['IamQualifier'] = IamQualifier
    globals()['IamResourceLimits'] = IamResourceLimits
    globals()['IamResourcePermission'] = IamResourcePermission
    globals()['IamResourceRoles'] = IamResourceRoles
    globals()['IamRole'] = IamRole
    globals()['IamSecurityHolder'] = IamSecurityHolder
    globals()['IamServiceProvider'] = IamServiceProvider
    globals()['IamSession'] = IamSession
    globals()['IamSessionLimits'] = IamSessionLimits
    globals()['IamSystem'] = IamSystem
    globals()['IamTrustPoint'] = IamTrustPoint
    globals()['IamUser'] = IamUser
    globals()['IamUserGroup'] = IamUserGroup
    globals()['IamUserPreference'] = IamUserPreference
    globals()['InventoryBase'] = InventoryBase
    globals()['InventoryDeviceInfo'] = InventoryDeviceInfo
    globals()['InventoryDnMoBinding'] = InventoryDnMoBinding
    globals()['InventoryGenericInventory'] = InventoryGenericInventory
    globals()['InventoryGenericInventoryHolder'] = InventoryGenericInventoryHolder
    globals()['InventoryRequest'] = InventoryRequest
    globals()['InventoryUemConnection'] = InventoryUemConnection
    globals()['IpmioverlanPolicy'] = IpmioverlanPolicy
    globals()['IppoolIpLease'] = IppoolIpLease
    globals()['IppoolPool'] = IppoolPool
    globals()['IppoolPoolMember'] = IppoolPoolMember
    globals()['IppoolShadowBlock'] = IppoolShadowBlock
    globals()['IppoolShadowPool'] = IppoolShadowPool
    globals()['IppoolUniverse'] = IppoolUniverse
    globals()['KvmKvmSession'] = KvmKvmSession
    globals()['KvmPolicy'] = KvmPolicy
    globals()['LicenseAccountLicenseData'] = LicenseAccountLicenseData
    globals()['LicenseCustomerOp'] = LicenseCustomerOp
    globals()['LicenseLicenseInfo'] = LicenseLicenseInfo
    globals()['LicenseLicenseReservationOp'] = LicenseLicenseReservationOp
    globals()['LicenseSmartlicenseToken'] = LicenseSmartlicenseToken
    globals()['LsServiceProfile'] = LsServiceProfile
    globals()['MacpoolIdBlock'] = MacpoolIdBlock
    globals()['MacpoolLease'] = MacpoolLease
    globals()['MacpoolPool'] = MacpoolPool
    globals()['MacpoolPoolMember'] = MacpoolPoolMember
    globals()['MacpoolUniverse'] = MacpoolUniverse
    globals()['ManagementController'] = ManagementController
    globals()['ManagementEntity'] = ManagementEntity
    globals()['ManagementInterface'] = ManagementInterface
    globals()['MemoryAbstractUnit'] = MemoryAbstractUnit
    globals()['MemoryArray'] = MemoryArray
    globals()['MemoryPersistentMemoryConfigResult'] = MemoryPersistentMemoryConfigResult
    globals()['MemoryPersistentMemoryConfiguration'] = MemoryPersistentMemoryConfiguration
    globals()['MemoryPersistentMemoryNamespace'] = MemoryPersistentMemoryNamespace
    globals()['MemoryPersistentMemoryNamespaceConfigResult'] = MemoryPersistentMemoryNamespaceConfigResult
    globals()['MemoryPersistentMemoryPolicy'] = MemoryPersistentMemoryPolicy
    globals()['MemoryPersistentMemoryRegion'] = MemoryPersistentMemoryRegion
    globals()['MemoryPersistentMemoryUnit'] = MemoryPersistentMemoryUnit
    globals()['MemoryUnit'] = MemoryUnit
    globals()['MetaDefinition'] = MetaDefinition
    globals()['MoBaseMoRelationship'] = MoBaseMoRelationship
    globals()['MoTag'] = MoTag
    globals()['MoVersionContext'] = MoVersionContext
    globals()['NetworkElement'] = NetworkElement
    globals()['NetworkElementSummary'] = NetworkElementSummary
    globals()['NetworkFcZoneInfo'] = NetworkFcZoneInfo
    globals()['NetworkVlanPortInfo'] = NetworkVlanPortInfo
    globals()['NetworkconfigPolicy'] = NetworkconfigPolicy
    globals()['NiaapiApicCcoPost'] = NiaapiApicCcoPost
    globals()['NiaapiApicFieldNotice'] = NiaapiApicFieldNotice
    globals()['NiaapiApicHweol'] = NiaapiApicHweol
    globals()['NiaapiApicLatestMaintainedRelease'] = NiaapiApicLatestMaintainedRelease
    globals()['NiaapiApicReleaseRecommend'] = NiaapiApicReleaseRecommend
    globals()['NiaapiApicSweol'] = NiaapiApicSweol
    globals()['NiaapiDcnmCcoPost'] = NiaapiDcnmCcoPost
    globals()['NiaapiDcnmFieldNotice'] = NiaapiDcnmFieldNotice
    globals()['NiaapiDcnmHweol'] = NiaapiDcnmHweol
    globals()['NiaapiDcnmLatestMaintainedRelease'] = NiaapiDcnmLatestMaintainedRelease
    globals()['NiaapiDcnmReleaseRecommend'] = NiaapiDcnmReleaseRecommend
    globals()['NiaapiDcnmSweol'] = NiaapiDcnmSweol
    globals()['NiaapiFieldNotice'] = NiaapiFieldNotice
    globals()['NiaapiFileDownloader'] = NiaapiFileDownloader
    globals()['NiaapiHardwareEol'] = NiaapiHardwareEol
    globals()['NiaapiMaintainedRelease'] = NiaapiMaintainedRelease
    globals()['NiaapiNewReleasePost'] = NiaapiNewReleasePost
    globals()['NiaapiNiaMetadata'] = NiaapiNiaMetadata
    globals()['NiaapiReleaseRecommend'] = NiaapiReleaseRecommend
    globals()['NiaapiSoftwareEol'] = NiaapiSoftwareEol
    globals()['NiaapiVersionRegex'] = NiaapiVersionRegex
    globals()['NiatelemetryNiaFeatureUsage'] = NiatelemetryNiaFeatureUsage
    globals()['NiatelemetryNiaInventory'] = NiatelemetryNiaInventory
    globals()['NiatelemetryNiaLicenseState'] = NiatelemetryNiaLicenseState
    globals()['NtpPolicy'] = NtpPolicy
    globals()['OrganizationOrganization'] = OrganizationOrganization
    globals()['OsBaseInstallConfig'] = OsBaseInstallConfig
    globals()['OsCatalog'] = OsCatalog
    globals()['OsConfigurationFile'] = OsConfigurationFile
    globals()['OsDistribution'] = OsDistribution
    globals()['OsInstall'] = OsInstall
    globals()['OsOsSupport'] = OsOsSupport
    globals()['OsTemplateFile'] = OsTemplateFile
    globals()['PciCoprocessorCard'] = PciCoprocessorCard
    globals()['PciDevice'] = PciDevice
    globals()['PciLink'] = PciLink
    globals()['PciSwitch'] = PciSwitch
    globals()['PolicyAbstractConfigChangeDetail'] = PolicyAbstractConfigChangeDetail
    globals()['PolicyAbstractConfigProfile'] = PolicyAbstractConfigProfile
    globals()['PolicyAbstractConfigResult'] = PolicyAbstractConfigResult
    globals()['PolicyAbstractConfigResultEntry'] = PolicyAbstractConfigResultEntry
    globals()['PolicyAbstractPolicy'] = PolicyAbstractPolicy
    globals()['PolicyAbstractProfile'] = PolicyAbstractProfile
    globals()['PolicyinventoryAbstractDeviceInfo'] = PolicyinventoryAbstractDeviceInfo
    globals()['PoolAbstractBlock'] = PoolAbstractBlock
    globals()['PoolAbstractPool'] = PoolAbstractPool
    globals()['PoolAbstractPoolMember'] = PoolAbstractPoolMember
    globals()['PortGroup'] = PortGroup
    globals()['PortInterfaceBase'] = PortInterfaceBase
    globals()['PortMacBinding'] = PortMacBinding
    globals()['PortPhysical'] = PortPhysical
    globals()['PortSubGroup'] = PortSubGroup
    globals()['ProcessorUnit'] = ProcessorUnit
    globals()['RecoveryAbstractBackupConfig'] = RecoveryAbstractBackupConfig
    globals()['RecoveryAbstractBackupInfo'] = RecoveryAbstractBackupInfo
    globals()['RecoveryBackupConfigPolicy'] = RecoveryBackupConfigPolicy
    globals()['RecoveryBackupProfile'] = RecoveryBackupProfile
    globals()['RecoveryConfigResult'] = RecoveryConfigResult
    globals()['RecoveryConfigResultEntry'] = RecoveryConfigResultEntry
    globals()['RecoveryOnDemandBackup'] = RecoveryOnDemandBackup
    globals()['RecoveryRestore'] = RecoveryRestore
    globals()['RecoveryScheduleConfigPolicy'] = RecoveryScheduleConfigPolicy
    globals()['ResourceGroup'] = ResourceGroup
    globals()['ResourceGroupMember'] = ResourceGroupMember
    globals()['ResourceLicenseResourceCount'] = ResourceLicenseResourceCount
    globals()['ResourceMembership'] = ResourceMembership
    globals()['ResourceMembershipHolder'] = ResourceMembershipHolder
    globals()['SdcardPolicy'] = SdcardPolicy
    globals()['SdwanProfile'] = SdwanProfile
    globals()['SdwanRouterNode'] = SdwanRouterNode
    globals()['SdwanRouterPolicy'] = SdwanRouterPolicy
    globals()['SdwanVmanageAccountPolicy'] = SdwanVmanageAccountPolicy
    globals()['SearchSearchItem'] = SearchSearchItem
    globals()['SearchSuggestItem'] = SearchSuggestItem
    globals()['SearchTagItem'] = SearchTagItem
    globals()['SecurityUnit'] = SecurityUnit
    globals()['ServerConfigChangeDetail'] = ServerConfigChangeDetail
    globals()['ServerConfigImport'] = ServerConfigImport
    globals()['ServerConfigResult'] = ServerConfigResult
    globals()['ServerConfigResultEntry'] = ServerConfigResultEntry
    globals()['ServerProfile'] = ServerProfile
    globals()['SmtpPolicy'] = SmtpPolicy
    globals()['SnmpPolicy'] = SnmpPolicy
    globals()['SoftwareApplianceDistributable'] = SoftwareApplianceDistributable
    globals()['SoftwareHclMeta'] = SoftwareHclMeta
    globals()['SoftwareHyperflexBundleDistributable'] = SoftwareHyperflexBundleDistributable
    globals()['SoftwareHyperflexDistributable'] = SoftwareHyperflexDistributable
    globals()['SoftwareSolutionDistributable'] = SoftwareSolutionDistributable
    globals()['SoftwarerepositoryAuthorization'] = SoftwarerepositoryAuthorization
    globals()['SoftwarerepositoryCachedImage'] = SoftwarerepositoryCachedImage
    globals()['SoftwarerepositoryCatalog'] = SoftwarerepositoryCatalog
    globals()['SoftwarerepositoryCategoryMapper'] = SoftwarerepositoryCategoryMapper
    globals()['SoftwarerepositoryCategoryMapperModel'] = SoftwarerepositoryCategoryMapperModel
    globals()['SoftwarerepositoryDownloadSpec'] = SoftwarerepositoryDownloadSpec
    globals()['SoftwarerepositoryFile'] = SoftwarerepositoryFile
    globals()['SoftwarerepositoryOperatingSystemFile'] = SoftwarerepositoryOperatingSystemFile
    globals()['SoftwarerepositoryRelease'] = SoftwarerepositoryRelease
    globals()['SolPolicy'] = SolPolicy
    globals()['SshPolicy'] = SshPolicy
    globals()['StorageBaseArray'] = StorageBaseArray
    globals()['StorageBaseArrayController'] = StorageBaseArrayController
    globals()['StorageBaseArrayDisk'] = StorageBaseArrayDisk
    globals()['StorageBaseHost'] = StorageBaseHost
    globals()['StorageBaseHostGroup'] = StorageBaseHostGroup
    globals()['StorageBaseHostLun'] = StorageBaseHostLun
    globals()['StorageBasePhysicalPort'] = StorageBasePhysicalPort
    globals()['StorageBaseProtectionGroup'] = StorageBaseProtectionGroup
    globals()['StorageBaseProtectionGroupSnapshot'] = StorageBaseProtectionGroupSnapshot
    globals()['StorageBaseReplicationSchedule'] = StorageBaseReplicationSchedule
    globals()['StorageBaseSnapshot'] = StorageBaseSnapshot
    globals()['StorageBaseSnapshotSchedule'] = StorageBaseSnapshotSchedule
    globals()['StorageBaseVolume'] = StorageBaseVolume
    globals()['StorageController'] = StorageController
    globals()['StorageDiskGroup'] = StorageDiskGroup
    globals()['StorageDiskGroupPolicy'] = StorageDiskGroupPolicy
    globals()['StorageEnclosure'] = StorageEnclosure
    globals()['StorageEnclosureDisk'] = StorageEnclosureDisk
    globals()['StorageEnclosureDiskSlotEp'] = StorageEnclosureDiskSlotEp
    globals()['StorageFlexFlashController'] = StorageFlexFlashController
    globals()['StorageFlexFlashControllerProps'] = StorageFlexFlashControllerProps
    globals()['StorageFlexFlashPhysicalDrive'] = StorageFlexFlashPhysicalDrive
    globals()['StorageFlexFlashVirtualDrive'] = StorageFlexFlashVirtualDrive
    globals()['StorageFlexUtilController'] = StorageFlexUtilController
    globals()['StorageFlexUtilPhysicalDrive'] = StorageFlexUtilPhysicalDrive
    globals()['StorageFlexUtilVirtualDrive'] = StorageFlexUtilVirtualDrive
    globals()['StorageItem'] = StorageItem
    globals()['StoragePhysicalDisk'] = StoragePhysicalDisk
    globals()['StoragePhysicalDiskExtension'] = StoragePhysicalDiskExtension
    globals()['StoragePhysicalDiskUsage'] = StoragePhysicalDiskUsage
    globals()['StoragePureArray'] = StoragePureArray
    globals()['StoragePureController'] = StoragePureController
    globals()['StoragePureDisk'] = StoragePureDisk
    globals()['StoragePureHost'] = StoragePureHost
    globals()['StoragePureHostGroup'] = StoragePureHostGroup
    globals()['StoragePureHostLun'] = StoragePureHostLun
    globals()['StoragePurePort'] = StoragePurePort
    globals()['StoragePureProtectionGroup'] = StoragePureProtectionGroup
    globals()['StoragePureProtectionGroupSnapshot'] = StoragePureProtectionGroupSnapshot
    globals()['StoragePureReplicationSchedule'] = StoragePureReplicationSchedule
    globals()['StoragePureSnapshotSchedule'] = StoragePureSnapshotSchedule
    globals()['StoragePureVolume'] = StoragePureVolume
    globals()['StoragePureVolumeSnapshot'] = StoragePureVolumeSnapshot
    globals()['StorageSasExpander'] = StorageSasExpander
    globals()['StorageSasPort'] = StorageSasPort
    globals()['StorageSpan'] = StorageSpan
    globals()['StorageStoragePolicy'] = StorageStoragePolicy
    globals()['StorageVdMemberEp'] = StorageVdMemberEp
    globals()['StorageVirtualDrive'] = StorageVirtualDrive
    globals()['StorageVirtualDriveExtension'] = StorageVirtualDriveExtension
    globals()['SyslogPolicy'] = SyslogPolicy
    globals()['TamAdvisoryCount'] = TamAdvisoryCount
    globals()['TamAdvisoryDefinition'] = TamAdvisoryDefinition
    globals()['TamAdvisoryInfo'] = TamAdvisoryInfo
    globals()['TamAdvisoryInstance'] = TamAdvisoryInstance
    globals()['TamBaseAdvisory'] = TamBaseAdvisory
    globals()['TamSecurityAdvisory'] = TamSecurityAdvisory
    globals()['TaskPureScopedInventory'] = TaskPureScopedInventory
    globals()['TechsupportmanagementDownload'] = TechsupportmanagementDownload
    globals()['TechsupportmanagementTechSupportBundle'] = TechsupportmanagementTechSupportBundle
    globals()['TechsupportmanagementTechSupportStatus'] = TechsupportmanagementTechSupportStatus
    globals()['TerminalAuditLog'] = TerminalAuditLog
    globals()['TopSystem'] = TopSystem
    globals()['UcsdBackupInfo'] = UcsdBackupInfo
    globals()['UuidpoolBlock'] = UuidpoolBlock
    globals()['UuidpoolPool'] = UuidpoolPool
    globals()['UuidpoolPoolMember'] = UuidpoolPoolMember
    globals()['UuidpoolUniverse'] = UuidpoolUniverse
    globals()['UuidpoolUuidLease'] = UuidpoolUuidLease
    globals()['ViewsView'] = ViewsView
    globals()['VirtualizationBaseCluster'] = VirtualizationBaseCluster
    globals()['VirtualizationBaseDatacenter'] = VirtualizationBaseDatacenter
    globals()['VirtualizationBaseDatastore'] = VirtualizationBaseDatastore
    globals()['VirtualizationBaseHost'] = VirtualizationBaseHost
    globals()['VirtualizationBaseHypervisorManager'] = VirtualizationBaseHypervisorManager
    globals()['VirtualizationBaseSourceDevice'] = VirtualizationBaseSourceDevice
    globals()['VirtualizationBaseVirtualMachine'] = VirtualizationBaseVirtualMachine
    globals()['VirtualizationVmwareCluster'] = VirtualizationVmwareCluster
    globals()['VirtualizationVmwareDatacenter'] = VirtualizationVmwareDatacenter
    globals()['VirtualizationVmwareDatastore'] = VirtualizationVmwareDatastore
    globals()['VirtualizationVmwareHost'] = VirtualizationVmwareHost
    globals()['VirtualizationVmwareVcenter'] = VirtualizationVmwareVcenter
    globals()['VirtualizationVmwareVirtualMachine'] = VirtualizationVmwareVirtualMachine
    globals()['VmediaPolicy'] = VmediaPolicy
    globals()['VnicEthAdapterPolicy'] = VnicEthAdapterPolicy
    globals()['VnicEthIf'] = VnicEthIf
    globals()['VnicEthNetworkPolicy'] = VnicEthNetworkPolicy
    globals()['VnicEthQosPolicy'] = VnicEthQosPolicy
    globals()['VnicFcAdapterPolicy'] = VnicFcAdapterPolicy
    globals()['VnicFcIf'] = VnicFcIf
    globals()['VnicFcNetworkPolicy'] = VnicFcNetworkPolicy
    globals()['VnicFcQosPolicy'] = VnicFcQosPolicy
    globals()['VnicLanConnectivityPolicy'] = VnicLanConnectivityPolicy
    globals()['VnicSanConnectivityPolicy'] = VnicSanConnectivityPolicy
    globals()['VrfVrf'] = VrfVrf
    globals()['WorkflowBatchApiExecutor'] = WorkflowBatchApiExecutor
    globals()['WorkflowBuildTaskMeta'] = WorkflowBuildTaskMeta
    globals()['WorkflowBuildTaskMetaOwner'] = WorkflowBuildTaskMetaOwner
    globals()['WorkflowCatalog'] = WorkflowCatalog
    globals()['WorkflowCustomDataTypeDefinition'] = WorkflowCustomDataTypeDefinition
    globals()['WorkflowErrorResponseHandler'] = WorkflowErrorResponseHandler
    globals()['WorkflowPendingDynamicWorkflowInfo'] = WorkflowPendingDynamicWorkflowInfo
    globals()['WorkflowTaskDefinition'] = WorkflowTaskDefinition
    globals()['WorkflowTaskInfo'] = WorkflowTaskInfo
    globals()['WorkflowWorkflowDefinition'] = WorkflowWorkflowDefinition
    globals()['WorkflowWorkflowInfo'] = WorkflowWorkflowInfo
    globals()['WorkflowWorkflowMeta'] = WorkflowWorkflowMeta


class MoBaseMo(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    additional_properties_type = None

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'class_id': (str,),  # noqa: E501
            'object_type': (str,),  # noqa: E501
            'account_moid': (str,),  # noqa: E501
            'create_time': (datetime,),  # noqa: E501
            'domain_group_moid': (str,),  # noqa: E501
            'mod_time': (datetime,),  # noqa: E501
            'moid': (str,),  # noqa: E501
            'owners': ([str],),  # noqa: E501
            'shared_scope': (str,),  # noqa: E501
            'tags': ([MoTag],),  # noqa: E501
            'version_context': (MoVersionContext,),  # noqa: E501
            'ancestors': ([MoBaseMoRelationship], none_type,),  # noqa: E501
            'parent': (MoBaseMoRelationship,),  # noqa: E501
            'permission_resources': ([MoBaseMoRelationship], none_type,),  # noqa: E501
            'display_names': (DisplayNames,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        lazy_import()
        val = {
            'aaa.AbstractAuditRecord': AaaAbstractAuditRecord,
            'aaa.AuditRecord': AaaAuditRecord,
            'access.Policy': AccessPolicy,
            'adapter.ConfigPolicy': AdapterConfigPolicy,
            'adapter.ExtEthInterface': AdapterExtEthInterface,
            'adapter.HostEthInterface': AdapterHostEthInterface,
            'adapter.HostFcInterface': AdapterHostFcInterface,
            'adapter.HostIscsiInterface': AdapterHostIscsiInterface,
            'adapter.Unit': AdapterUnit,
            'appliance.Backup': ApplianceBackup,
            'appliance.BackupBase': ApplianceBackupBase,
            'appliance.BackupPolicy': ApplianceBackupPolicy,
            'appliance.CertificateSetting': ApplianceCertificateSetting,
            'appliance.DataExportPolicy': ApplianceDataExportPolicy,
            'appliance.DeviceClaim': ApplianceDeviceClaim,
            'appliance.DiagSetting': ApplianceDiagSetting,
            'appliance.ImageBundle': ApplianceImageBundle,
            'appliance.NodeInfo': ApplianceNodeInfo,
            'appliance.ReleaseNote': ApplianceReleaseNote,
            'appliance.Restore': ApplianceRestore,
            'appliance.SetupInfo': ApplianceSetupInfo,
            'appliance.SystemInfo': ApplianceSystemInfo,
            'appliance.Upgrade': ApplianceUpgrade,
            'appliance.UpgradePolicy': ApplianceUpgradePolicy,
            'asset.ClusterMember': AssetClusterMember,
            'asset.DeviceClaim': AssetDeviceClaim,
            'asset.DeviceConfiguration': AssetDeviceConfiguration,
            'asset.DeviceConnection': AssetDeviceConnection,
            'asset.DeviceConnectorManager': AssetDeviceConnectorManager,
            'asset.DeviceContractInformation': AssetDeviceContractInformation,
            'asset.DeviceRegistration': AssetDeviceRegistration,
            'asset.ManagedDevice': AssetManagedDevice,
            'asset.Target': AssetTarget,
            'bios.BootDevice': BiosBootDevice,
            'bios.BootMode': BiosBootMode,
            'bios.Policy': BiosPolicy,
            'bios.SystemBootOrder': BiosSystemBootOrder,
            'bios.Unit': BiosUnit,
            'boot.DeviceBootMode': BootDeviceBootMode,
            'boot.PrecisionPolicy': BootPrecisionPolicy,
            'capability.AdapterUnitDescriptor': CapabilityAdapterUnitDescriptor,
            'capability.Capability': CapabilityCapability,
            'capability.ChassisDescriptor': CapabilityChassisDescriptor,
            'capability.ChassisManufacturingDef': CapabilityChassisManufacturingDef,
            'capability.EndpointDescriptor': CapabilityEndpointDescriptor,
            'capability.EquipmentPhysicalDef': CapabilityEquipmentPhysicalDef,
            'capability.EquipmentSlotArray': CapabilityEquipmentSlotArray,
            'capability.FanModuleDescriptor': CapabilityFanModuleDescriptor,
            'capability.FanModuleManufacturingDef': CapabilityFanModuleManufacturingDef,
            'capability.HardwareDescriptor': CapabilityHardwareDescriptor,
            'capability.IoCardCapabilityDef': CapabilityIoCardCapabilityDef,
            'capability.IoCardDescriptor': CapabilityIoCardDescriptor,
            'capability.IoCardManufacturingDef': CapabilityIoCardManufacturingDef,
            'capability.PortGroupAggregationDef': CapabilityPortGroupAggregationDef,
            'capability.PsuDescriptor': CapabilityPsuDescriptor,
            'capability.PsuManufacturingDef': CapabilityPsuManufacturingDef,
            'capability.Section': CapabilitySection,
            'capability.SiocModuleCapabilityDef': CapabilitySiocModuleCapabilityDef,
            'capability.SiocModuleDescriptor': CapabilitySiocModuleDescriptor,
            'capability.SiocModuleManufacturingDef': CapabilitySiocModuleManufacturingDef,
            'capability.SwitchCapability': CapabilitySwitchCapability,
            'capability.SwitchCapabilityDef': CapabilitySwitchCapabilityDef,
            'capability.SwitchDescriptor': CapabilitySwitchDescriptor,
            'capability.SwitchManufacturingDef': CapabilitySwitchManufacturingDef,
            'compute.Blade': ComputeBlade,
            'compute.BladeIdentity': ComputeBladeIdentity,
            'compute.Board': ComputeBoard,
            'compute.Physical': ComputePhysical,
            'compute.PhysicalSummary': ComputePhysicalSummary,
            'compute.RackUnit': ComputeRackUnit,
            'compute.RackUnitIdentity': ComputeRackUnitIdentity,
            'compute.ServerSetting': ComputeServerSetting,
            'cond.Alarm': CondAlarm,
            'cond.HclStatus': CondHclStatus,
            'cond.HclStatusDetail': CondHclStatusDetail,
            'cond.HclStatusJob': CondHclStatusJob,
            'config.ExportedItem': ConfigExportedItem,
            'config.Exporter': ConfigExporter,
            'config.ImportedItem': ConfigImportedItem,
            'config.Importer': ConfigImporter,
            'connector.DownloadStatus': ConnectorDownloadStatus,
            'connector.ScopedInventory': ConnectorScopedInventory,
            'connectorpack.ConnectorPackUpgrade': ConnectorpackConnectorPackUpgrade,
            'connectorpack.UpgradeImpact': ConnectorpackUpgradeImpact,
            'deviceconnector.Policy': DeviceconnectorPolicy,
            'equipment.AbstractDevice': EquipmentAbstractDevice,
            'equipment.Base': EquipmentBase,
            'equipment.Chassis': EquipmentChassis,
            'equipment.ChassisIdentity': EquipmentChassisIdentity,
            'equipment.DeviceSummary': EquipmentDeviceSummary,
            'equipment.Fan': EquipmentFan,
            'equipment.FanModule': EquipmentFanModule,
            'equipment.Fex': EquipmentFex,
            'equipment.FexIdentity': EquipmentFexIdentity,
            'equipment.FexOperation': EquipmentFexOperation,
            'equipment.Identity': EquipmentIdentity,
            'equipment.IdentitySummary': EquipmentIdentitySummary,
            'equipment.IoCard': EquipmentIoCard,
            'equipment.IoCardBase': EquipmentIoCardBase,
            'equipment.IoCardOperation': EquipmentIoCardOperation,
            'equipment.IoExpander': EquipmentIoExpander,
            'equipment.LocatorLed': EquipmentLocatorLed,
            'equipment.PhysicalIdentity': EquipmentPhysicalIdentity,
            'equipment.Psu': EquipmentPsu,
            'equipment.PsuControl': EquipmentPsuControl,
            'equipment.RackEnclosure': EquipmentRackEnclosure,
            'equipment.RackEnclosureSlot': EquipmentRackEnclosureSlot,
            'equipment.SharedIoModule': EquipmentSharedIoModule,
            'equipment.SwitchCard': EquipmentSwitchCard,
            'equipment.SystemIoController': EquipmentSystemIoController,
            'equipment.Tpm': EquipmentTpm,
            'equipment.Transceiver': EquipmentTransceiver,
            'ether.HostPort': EtherHostPort,
            'ether.NetworkPort': EtherNetworkPort,
            'ether.PhysicalPort': EtherPhysicalPort,
            'ether.PhysicalPortBase': EtherPhysicalPortBase,
            'ether.PortChannel': EtherPortChannel,
            'externalsite.Authorization': ExternalsiteAuthorization,
            'fabric.ConfigChangeDetail': FabricConfigChangeDetail,
            'fabric.ConfigResult': FabricConfigResult,
            'fabric.ConfigResultEntry': FabricConfigResultEntry,
            'fabric.EthNetworkControlPolicy': FabricEthNetworkControlPolicy,
            'fabric.EthNetworkPolicy': FabricEthNetworkPolicy,
            'fabric.FcNetworkPolicy': FabricFcNetworkPolicy,
            'fabric.FcUplinkPcRole': FabricFcUplinkPcRole,
            'fabric.FcUplinkRole': FabricFcUplinkRole,
            'fabric.FcoeUplinkPcRole': FabricFcoeUplinkPcRole,
            'fabric.FcoeUplinkRole': FabricFcoeUplinkRole,
            'fabric.PcMember': FabricPcMember,
            'fabric.PcOperation': FabricPcOperation,
            'fabric.PortBase': FabricPortBase,
            'fabric.PortChannelRole': FabricPortChannelRole,
            'fabric.PortMode': FabricPortMode,
            'fabric.PortOperation': FabricPortOperation,
            'fabric.PortPolicy': FabricPortPolicy,
            'fabric.PortRole': FabricPortRole,
            'fabric.QosPolicy': FabricQosPolicy,
            'fabric.ServerRole': FabricServerRole,
            'fabric.SwitchClusterProfile': FabricSwitchClusterProfile,
            'fabric.SwitchProfile': FabricSwitchProfile,
            'fabric.UplinkPcRole': FabricUplinkPcRole,
            'fabric.UplinkRole': FabricUplinkRole,
            'fabric.Vlan': FabricVlan,
            'fabric.Vsan': FabricVsan,
            'fault.Instance': FaultInstance,
            'fc.PhysicalPort': FcPhysicalPort,
            'fc.PortChannel': FcPortChannel,
            'fcpool.FcBlock': FcpoolFcBlock,
            'fcpool.Lease': FcpoolLease,
            'fcpool.Pool': FcpoolPool,
            'fcpool.PoolMember': FcpoolPoolMember,
            'fcpool.Universe': FcpoolUniverse,
            'feedback.FeedbackPost': FeedbackFeedbackPost,
            'firmware.BaseDistributable': FirmwareBaseDistributable,
            'firmware.BiosDescriptor': FirmwareBiosDescriptor,
            'firmware.BoardControllerDescriptor': FirmwareBoardControllerDescriptor,
            'firmware.ChassisUpgrade': FirmwareChassisUpgrade,
            'firmware.CimcDescriptor': FirmwareCimcDescriptor,
            'firmware.ComponentDescriptor': FirmwareComponentDescriptor,
            'firmware.DimmDescriptor': FirmwareDimmDescriptor,
            'firmware.Distributable': FirmwareDistributable,
            'firmware.DistributableMeta': FirmwareDistributableMeta,
            'firmware.DriveDescriptor': FirmwareDriveDescriptor,
            'firmware.DriverDistributable': FirmwareDriverDistributable,
            'firmware.Eula': FirmwareEula,
            'firmware.FirmwareSummary': FirmwareFirmwareSummary,
            'firmware.GpuDescriptor': FirmwareGpuDescriptor,
            'firmware.HbaDescriptor': FirmwareHbaDescriptor,
            'firmware.IomDescriptor': FirmwareIomDescriptor,
            'firmware.MswitchDescriptor': FirmwareMswitchDescriptor,
            'firmware.NxosDescriptor': FirmwareNxosDescriptor,
            'firmware.PcieDescriptor': FirmwarePcieDescriptor,
            'firmware.PsuDescriptor': FirmwarePsuDescriptor,
            'firmware.RunningFirmware': FirmwareRunningFirmware,
            'firmware.SasExpanderDescriptor': FirmwareSasExpanderDescriptor,
            'firmware.ServerConfigurationUtilityDistributable': FirmwareServerConfigurationUtilityDistributable,
            'firmware.StorageControllerDescriptor': FirmwareStorageControllerDescriptor,
            'firmware.SwitchUpgrade': FirmwareSwitchUpgrade,
            'firmware.Upgrade': FirmwareUpgrade,
            'firmware.UpgradeBase': FirmwareUpgradeBase,
            'firmware.UpgradeImpact': FirmwareUpgradeImpact,
            'firmware.UpgradeImpactBase': FirmwareUpgradeImpactBase,
            'firmware.UpgradeImpactStatus': FirmwareUpgradeImpactStatus,
            'firmware.UpgradeStatus': FirmwareUpgradeStatus,
            'forecast.Catalog': ForecastCatalog,
            'forecast.Definition': ForecastDefinition,
            'forecast.Instance': ForecastInstance,
            'graphics.Card': GraphicsCard,
            'graphics.Controller': GraphicsController,
            'hcl.CompatibilityStatus': HclCompatibilityStatus,
            'hcl.DriverImage': HclDriverImage,
            'hcl.ExemptedCatalog': HclExemptedCatalog,
            'hcl.HyperflexSoftwareCompatibilityInfo': HclHyperflexSoftwareCompatibilityInfo,
            'hcl.OperatingSystem': HclOperatingSystem,
            'hcl.OperatingSystemVendor': HclOperatingSystemVendor,
            'hcl.ServiceStatus': HclServiceStatus,
            'hcl.SupportedDriverName': HclSupportedDriverName,
            'hyperflex.Alarm': HyperflexAlarm,
            'hyperflex.AppCatalog': HyperflexAppCatalog,
            'hyperflex.AutoSupportPolicy': HyperflexAutoSupportPolicy,
            'hyperflex.CapabilityInfo': HyperflexCapabilityInfo,
            'hyperflex.Cluster': HyperflexCluster,
            'hyperflex.ClusterNetworkPolicy': HyperflexClusterNetworkPolicy,
            'hyperflex.ClusterProfile': HyperflexClusterProfile,
            'hyperflex.ClusterStoragePolicy': HyperflexClusterStoragePolicy,
            'hyperflex.ConfigResult': HyperflexConfigResult,
            'hyperflex.ConfigResultEntry': HyperflexConfigResultEntry,
            'hyperflex.ExtFcStoragePolicy': HyperflexExtFcStoragePolicy,
            'hyperflex.ExtIscsiStoragePolicy': HyperflexExtIscsiStoragePolicy,
            'hyperflex.FeatureLimitExternal': HyperflexFeatureLimitExternal,
            'hyperflex.FeatureLimitInternal': HyperflexFeatureLimitInternal,
            'hyperflex.Health': HyperflexHealth,
            'hyperflex.HxdpVersion': HyperflexHxdpVersion,
            'hyperflex.LocalCredentialPolicy': HyperflexLocalCredentialPolicy,
            'hyperflex.Node': HyperflexNode,
            'hyperflex.NodeConfigPolicy': HyperflexNodeConfigPolicy,
            'hyperflex.NodeProfile': HyperflexNodeProfile,
            'hyperflex.ProxySettingPolicy': HyperflexProxySettingPolicy,
            'hyperflex.ServerFirmwareVersion': HyperflexServerFirmwareVersion,
            'hyperflex.ServerModel': HyperflexServerModel,
            'hyperflex.SoftwareVersionPolicy': HyperflexSoftwareVersionPolicy,
            'hyperflex.SysConfigPolicy': HyperflexSysConfigPolicy,
            'hyperflex.UcsmConfigPolicy': HyperflexUcsmConfigPolicy,
            'hyperflex.VcenterConfigPolicy': HyperflexVcenterConfigPolicy,
            'iaas.ConnectorPack': IaasConnectorPack,
            'iaas.DeviceStatus': IaasDeviceStatus,
            'iaas.LicenseInfo': IaasLicenseInfo,
            'iaas.MostRunTasks': IaasMostRunTasks,
            'iaas.UcsdInfo': IaasUcsdInfo,
            'iaas.UcsdManagedInfra': IaasUcsdManagedInfra,
            'iam.Account': IamAccount,
            'iam.AccountExperience': IamAccountExperience,
            'iam.ApiKey': IamApiKey,
            'iam.AppRegistration': IamAppRegistration,
            'iam.Certificate': IamCertificate,
            'iam.CertificateRequest': IamCertificateRequest,
            'iam.DomainGroup': IamDomainGroup,
            'iam.EndPointPrivilege': IamEndPointPrivilege,
            'iam.EndPointRole': IamEndPointRole,
            'iam.EndPointUser': IamEndPointUser,
            'iam.EndPointUserPolicy': IamEndPointUserPolicy,
            'iam.EndPointUserRole': IamEndPointUserRole,
            'iam.Idp': IamIdp,
            'iam.IdpReference': IamIdpReference,
            'iam.LdapGroup': IamLdapGroup,
            'iam.LdapPolicy': IamLdapPolicy,
            'iam.LdapProvider': IamLdapProvider,
            'iam.LocalUserPassword': IamLocalUserPassword,
            'iam.OAuthToken': IamOAuthToken,
            'iam.Permission': IamPermission,
            'iam.PrivateKeySpec': IamPrivateKeySpec,
            'iam.Privilege': IamPrivilege,
            'iam.PrivilegeSet': IamPrivilegeSet,
            'iam.Qualifier': IamQualifier,
            'iam.ResourceLimits': IamResourceLimits,
            'iam.ResourcePermission': IamResourcePermission,
            'iam.ResourceRoles': IamResourceRoles,
            'iam.Role': IamRole,
            'iam.SecurityHolder': IamSecurityHolder,
            'iam.ServiceProvider': IamServiceProvider,
            'iam.Session': IamSession,
            'iam.SessionLimits': IamSessionLimits,
            'iam.System': IamSystem,
            'iam.TrustPoint': IamTrustPoint,
            'iam.User': IamUser,
            'iam.UserGroup': IamUserGroup,
            'iam.UserPreference': IamUserPreference,
            'inventory.Base': InventoryBase,
            'inventory.DeviceInfo': InventoryDeviceInfo,
            'inventory.DnMoBinding': InventoryDnMoBinding,
            'inventory.GenericInventory': InventoryGenericInventory,
            'inventory.GenericInventoryHolder': InventoryGenericInventoryHolder,
            'inventory.Request': InventoryRequest,
            'inventory.UemConnection': InventoryUemConnection,
            'ipmioverlan.Policy': IpmioverlanPolicy,
            'ippool.IpLease': IppoolIpLease,
            'ippool.Pool': IppoolPool,
            'ippool.PoolMember': IppoolPoolMember,
            'ippool.ShadowBlock': IppoolShadowBlock,
            'ippool.ShadowPool': IppoolShadowPool,
            'ippool.Universe': IppoolUniverse,
            'kvm.KvmSession': KvmKvmSession,
            'kvm.Policy': KvmPolicy,
            'license.AccountLicenseData': LicenseAccountLicenseData,
            'license.CustomerOp': LicenseCustomerOp,
            'license.LicenseInfo': LicenseLicenseInfo,
            'license.LicenseReservationOp': LicenseLicenseReservationOp,
            'license.SmartlicenseToken': LicenseSmartlicenseToken,
            'ls.ServiceProfile': LsServiceProfile,
            'macpool.IdBlock': MacpoolIdBlock,
            'macpool.Lease': MacpoolLease,
            'macpool.Pool': MacpoolPool,
            'macpool.PoolMember': MacpoolPoolMember,
            'macpool.Universe': MacpoolUniverse,
            'management.Controller': ManagementController,
            'management.Entity': ManagementEntity,
            'management.Interface': ManagementInterface,
            'memory.AbstractUnit': MemoryAbstractUnit,
            'memory.Array': MemoryArray,
            'memory.PersistentMemoryConfigResult': MemoryPersistentMemoryConfigResult,
            'memory.PersistentMemoryConfiguration': MemoryPersistentMemoryConfiguration,
            'memory.PersistentMemoryNamespace': MemoryPersistentMemoryNamespace,
            'memory.PersistentMemoryNamespaceConfigResult': MemoryPersistentMemoryNamespaceConfigResult,
            'memory.PersistentMemoryPolicy': MemoryPersistentMemoryPolicy,
            'memory.PersistentMemoryRegion': MemoryPersistentMemoryRegion,
            'memory.PersistentMemoryUnit': MemoryPersistentMemoryUnit,
            'memory.Unit': MemoryUnit,
            'meta.Definition': MetaDefinition,
            'network.Element': NetworkElement,
            'network.ElementSummary': NetworkElementSummary,
            'network.FcZoneInfo': NetworkFcZoneInfo,
            'network.VlanPortInfo': NetworkVlanPortInfo,
            'networkconfig.Policy': NetworkconfigPolicy,
            'niaapi.ApicCcoPost': NiaapiApicCcoPost,
            'niaapi.ApicFieldNotice': NiaapiApicFieldNotice,
            'niaapi.ApicHweol': NiaapiApicHweol,
            'niaapi.ApicLatestMaintainedRelease': NiaapiApicLatestMaintainedRelease,
            'niaapi.ApicReleaseRecommend': NiaapiApicReleaseRecommend,
            'niaapi.ApicSweol': NiaapiApicSweol,
            'niaapi.DcnmCcoPost': NiaapiDcnmCcoPost,
            'niaapi.DcnmFieldNotice': NiaapiDcnmFieldNotice,
            'niaapi.DcnmHweol': NiaapiDcnmHweol,
            'niaapi.DcnmLatestMaintainedRelease': NiaapiDcnmLatestMaintainedRelease,
            'niaapi.DcnmReleaseRecommend': NiaapiDcnmReleaseRecommend,
            'niaapi.DcnmSweol': NiaapiDcnmSweol,
            'niaapi.FieldNotice': NiaapiFieldNotice,
            'niaapi.FileDownloader': NiaapiFileDownloader,
            'niaapi.HardwareEol': NiaapiHardwareEol,
            'niaapi.MaintainedRelease': NiaapiMaintainedRelease,
            'niaapi.NewReleasePost': NiaapiNewReleasePost,
            'niaapi.NiaMetadata': NiaapiNiaMetadata,
            'niaapi.ReleaseRecommend': NiaapiReleaseRecommend,
            'niaapi.SoftwareEol': NiaapiSoftwareEol,
            'niaapi.VersionRegex': NiaapiVersionRegex,
            'niatelemetry.NiaFeatureUsage': NiatelemetryNiaFeatureUsage,
            'niatelemetry.NiaInventory': NiatelemetryNiaInventory,
            'niatelemetry.NiaLicenseState': NiatelemetryNiaLicenseState,
            'ntp.Policy': NtpPolicy,
            'organization.Organization': OrganizationOrganization,
            'os.BaseInstallConfig': OsBaseInstallConfig,
            'os.Catalog': OsCatalog,
            'os.ConfigurationFile': OsConfigurationFile,
            'os.Distribution': OsDistribution,
            'os.Install': OsInstall,
            'os.OsSupport': OsOsSupport,
            'os.TemplateFile': OsTemplateFile,
            'pci.CoprocessorCard': PciCoprocessorCard,
            'pci.Device': PciDevice,
            'pci.Link': PciLink,
            'pci.Switch': PciSwitch,
            'policy.AbstractConfigChangeDetail': PolicyAbstractConfigChangeDetail,
            'policy.AbstractConfigProfile': PolicyAbstractConfigProfile,
            'policy.AbstractConfigResult': PolicyAbstractConfigResult,
            'policy.AbstractConfigResultEntry': PolicyAbstractConfigResultEntry,
            'policy.AbstractPolicy': PolicyAbstractPolicy,
            'policy.AbstractProfile': PolicyAbstractProfile,
            'policyinventory.AbstractDeviceInfo': PolicyinventoryAbstractDeviceInfo,
            'pool.AbstractBlock': PoolAbstractBlock,
            'pool.AbstractPool': PoolAbstractPool,
            'pool.AbstractPoolMember': PoolAbstractPoolMember,
            'port.Group': PortGroup,
            'port.InterfaceBase': PortInterfaceBase,
            'port.MacBinding': PortMacBinding,
            'port.Physical': PortPhysical,
            'port.SubGroup': PortSubGroup,
            'processor.Unit': ProcessorUnit,
            'recovery.AbstractBackupConfig': RecoveryAbstractBackupConfig,
            'recovery.AbstractBackupInfo': RecoveryAbstractBackupInfo,
            'recovery.BackupConfigPolicy': RecoveryBackupConfigPolicy,
            'recovery.BackupProfile': RecoveryBackupProfile,
            'recovery.ConfigResult': RecoveryConfigResult,
            'recovery.ConfigResultEntry': RecoveryConfigResultEntry,
            'recovery.OnDemandBackup': RecoveryOnDemandBackup,
            'recovery.Restore': RecoveryRestore,
            'recovery.ScheduleConfigPolicy': RecoveryScheduleConfigPolicy,
            'resource.Group': ResourceGroup,
            'resource.GroupMember': ResourceGroupMember,
            'resource.LicenseResourceCount': ResourceLicenseResourceCount,
            'resource.Membership': ResourceMembership,
            'resource.MembershipHolder': ResourceMembershipHolder,
            'sdcard.Policy': SdcardPolicy,
            'sdwan.Profile': SdwanProfile,
            'sdwan.RouterNode': SdwanRouterNode,
            'sdwan.RouterPolicy': SdwanRouterPolicy,
            'sdwan.VmanageAccountPolicy': SdwanVmanageAccountPolicy,
            'search.SearchItem': SearchSearchItem,
            'search.SuggestItem': SearchSuggestItem,
            'search.TagItem': SearchTagItem,
            'security.Unit': SecurityUnit,
            'server.ConfigChangeDetail': ServerConfigChangeDetail,
            'server.ConfigImport': ServerConfigImport,
            'server.ConfigResult': ServerConfigResult,
            'server.ConfigResultEntry': ServerConfigResultEntry,
            'server.Profile': ServerProfile,
            'smtp.Policy': SmtpPolicy,
            'snmp.Policy': SnmpPolicy,
            'software.ApplianceDistributable': SoftwareApplianceDistributable,
            'software.HclMeta': SoftwareHclMeta,
            'software.HyperflexBundleDistributable': SoftwareHyperflexBundleDistributable,
            'software.HyperflexDistributable': SoftwareHyperflexDistributable,
            'software.SolutionDistributable': SoftwareSolutionDistributable,
            'softwarerepository.Authorization': SoftwarerepositoryAuthorization,
            'softwarerepository.CachedImage': SoftwarerepositoryCachedImage,
            'softwarerepository.Catalog': SoftwarerepositoryCatalog,
            'softwarerepository.CategoryMapper': SoftwarerepositoryCategoryMapper,
            'softwarerepository.CategoryMapperModel': SoftwarerepositoryCategoryMapperModel,
            'softwarerepository.DownloadSpec': SoftwarerepositoryDownloadSpec,
            'softwarerepository.File': SoftwarerepositoryFile,
            'softwarerepository.OperatingSystemFile': SoftwarerepositoryOperatingSystemFile,
            'softwarerepository.Release': SoftwarerepositoryRelease,
            'sol.Policy': SolPolicy,
            'ssh.Policy': SshPolicy,
            'storage.BaseArray': StorageBaseArray,
            'storage.BaseArrayController': StorageBaseArrayController,
            'storage.BaseArrayDisk': StorageBaseArrayDisk,
            'storage.BaseHost': StorageBaseHost,
            'storage.BaseHostGroup': StorageBaseHostGroup,
            'storage.BaseHostLun': StorageBaseHostLun,
            'storage.BasePhysicalPort': StorageBasePhysicalPort,
            'storage.BaseProtectionGroup': StorageBaseProtectionGroup,
            'storage.BaseProtectionGroupSnapshot': StorageBaseProtectionGroupSnapshot,
            'storage.BaseReplicationSchedule': StorageBaseReplicationSchedule,
            'storage.BaseSnapshot': StorageBaseSnapshot,
            'storage.BaseSnapshotSchedule': StorageBaseSnapshotSchedule,
            'storage.BaseVolume': StorageBaseVolume,
            'storage.Controller': StorageController,
            'storage.DiskGroup': StorageDiskGroup,
            'storage.DiskGroupPolicy': StorageDiskGroupPolicy,
            'storage.Enclosure': StorageEnclosure,
            'storage.EnclosureDisk': StorageEnclosureDisk,
            'storage.EnclosureDiskSlotEp': StorageEnclosureDiskSlotEp,
            'storage.FlexFlashController': StorageFlexFlashController,
            'storage.FlexFlashControllerProps': StorageFlexFlashControllerProps,
            'storage.FlexFlashPhysicalDrive': StorageFlexFlashPhysicalDrive,
            'storage.FlexFlashVirtualDrive': StorageFlexFlashVirtualDrive,
            'storage.FlexUtilController': StorageFlexUtilController,
            'storage.FlexUtilPhysicalDrive': StorageFlexUtilPhysicalDrive,
            'storage.FlexUtilVirtualDrive': StorageFlexUtilVirtualDrive,
            'storage.Item': StorageItem,
            'storage.PhysicalDisk': StoragePhysicalDisk,
            'storage.PhysicalDiskExtension': StoragePhysicalDiskExtension,
            'storage.PhysicalDiskUsage': StoragePhysicalDiskUsage,
            'storage.PureArray': StoragePureArray,
            'storage.PureController': StoragePureController,
            'storage.PureDisk': StoragePureDisk,
            'storage.PureHost': StoragePureHost,
            'storage.PureHostGroup': StoragePureHostGroup,
            'storage.PureHostLun': StoragePureHostLun,
            'storage.PurePort': StoragePurePort,
            'storage.PureProtectionGroup': StoragePureProtectionGroup,
            'storage.PureProtectionGroupSnapshot': StoragePureProtectionGroupSnapshot,
            'storage.PureReplicationSchedule': StoragePureReplicationSchedule,
            'storage.PureSnapshotSchedule': StoragePureSnapshotSchedule,
            'storage.PureVolume': StoragePureVolume,
            'storage.PureVolumeSnapshot': StoragePureVolumeSnapshot,
            'storage.SasExpander': StorageSasExpander,
            'storage.SasPort': StorageSasPort,
            'storage.Span': StorageSpan,
            'storage.StoragePolicy': StorageStoragePolicy,
            'storage.VdMemberEp': StorageVdMemberEp,
            'storage.VirtualDrive': StorageVirtualDrive,
            'storage.VirtualDriveExtension': StorageVirtualDriveExtension,
            'syslog.Policy': SyslogPolicy,
            'tam.AdvisoryCount': TamAdvisoryCount,
            'tam.AdvisoryDefinition': TamAdvisoryDefinition,
            'tam.AdvisoryInfo': TamAdvisoryInfo,
            'tam.AdvisoryInstance': TamAdvisoryInstance,
            'tam.BaseAdvisory': TamBaseAdvisory,
            'tam.SecurityAdvisory': TamSecurityAdvisory,
            'task.PureScopedInventory': TaskPureScopedInventory,
            'techsupportmanagement.Download': TechsupportmanagementDownload,
            'techsupportmanagement.TechSupportBundle': TechsupportmanagementTechSupportBundle,
            'techsupportmanagement.TechSupportStatus': TechsupportmanagementTechSupportStatus,
            'terminal.AuditLog': TerminalAuditLog,
            'top.System': TopSystem,
            'ucsd.BackupInfo': UcsdBackupInfo,
            'uuidpool.Block': UuidpoolBlock,
            'uuidpool.Pool': UuidpoolPool,
            'uuidpool.PoolMember': UuidpoolPoolMember,
            'uuidpool.Universe': UuidpoolUniverse,
            'uuidpool.UuidLease': UuidpoolUuidLease,
            'views.View': ViewsView,
            'virtualization.BaseCluster': VirtualizationBaseCluster,
            'virtualization.BaseDatacenter': VirtualizationBaseDatacenter,
            'virtualization.BaseDatastore': VirtualizationBaseDatastore,
            'virtualization.BaseHost': VirtualizationBaseHost,
            'virtualization.BaseHypervisorManager': VirtualizationBaseHypervisorManager,
            'virtualization.BaseSourceDevice': VirtualizationBaseSourceDevice,
            'virtualization.BaseVirtualMachine': VirtualizationBaseVirtualMachine,
            'virtualization.VmwareCluster': VirtualizationVmwareCluster,
            'virtualization.VmwareDatacenter': VirtualizationVmwareDatacenter,
            'virtualization.VmwareDatastore': VirtualizationVmwareDatastore,
            'virtualization.VmwareHost': VirtualizationVmwareHost,
            'virtualization.VmwareVcenter': VirtualizationVmwareVcenter,
            'virtualization.VmwareVirtualMachine': VirtualizationVmwareVirtualMachine,
            'vmedia.Policy': VmediaPolicy,
            'vnic.EthAdapterPolicy': VnicEthAdapterPolicy,
            'vnic.EthIf': VnicEthIf,
            'vnic.EthNetworkPolicy': VnicEthNetworkPolicy,
            'vnic.EthQosPolicy': VnicEthQosPolicy,
            'vnic.FcAdapterPolicy': VnicFcAdapterPolicy,
            'vnic.FcIf': VnicFcIf,
            'vnic.FcNetworkPolicy': VnicFcNetworkPolicy,
            'vnic.FcQosPolicy': VnicFcQosPolicy,
            'vnic.LanConnectivityPolicy': VnicLanConnectivityPolicy,
            'vnic.SanConnectivityPolicy': VnicSanConnectivityPolicy,
            'vrf.Vrf': VrfVrf,
            'workflow.BatchApiExecutor': WorkflowBatchApiExecutor,
            'workflow.BuildTaskMeta': WorkflowBuildTaskMeta,
            'workflow.BuildTaskMetaOwner': WorkflowBuildTaskMetaOwner,
            'workflow.Catalog': WorkflowCatalog,
            'workflow.CustomDataTypeDefinition': WorkflowCustomDataTypeDefinition,
            'workflow.ErrorResponseHandler': WorkflowErrorResponseHandler,
            'workflow.PendingDynamicWorkflowInfo': WorkflowPendingDynamicWorkflowInfo,
            'workflow.TaskDefinition': WorkflowTaskDefinition,
            'workflow.TaskInfo': WorkflowTaskInfo,
            'workflow.WorkflowDefinition': WorkflowWorkflowDefinition,
            'workflow.WorkflowInfo': WorkflowWorkflowInfo,
            'workflow.WorkflowMeta': WorkflowWorkflowMeta,
        }
        if not val:
            return None
        return {'class_id': val}

    attribute_map = {
        'class_id': 'ClassId',  # noqa: E501
        'object_type': 'ObjectType',  # noqa: E501
        'account_moid': 'AccountMoid',  # noqa: E501
        'create_time': 'CreateTime',  # noqa: E501
        'domain_group_moid': 'DomainGroupMoid',  # noqa: E501
        'mod_time': 'ModTime',  # noqa: E501
        'moid': 'Moid',  # noqa: E501
        'owners': 'Owners',  # noqa: E501
        'shared_scope': 'SharedScope',  # noqa: E501
        'tags': 'Tags',  # noqa: E501
        'version_context': 'VersionContext',  # noqa: E501
        'ancestors': 'Ancestors',  # noqa: E501
        'parent': 'Parent',  # noqa: E501
        'permission_resources': 'PermissionResources',  # noqa: E501
        'display_names': 'DisplayNames',  # noqa: E501
    }

    _composed_schemas = {}

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, class_id, object_type, *args, **kwargs):  # noqa: E501
        """MoBaseMo - a model defined in OpenAPI

        Args:
            class_id (str): The concrete type of this complex type. Its value must be the same as the &#39;objectType&#39; property. The OpenAPI document references this property as a discriminator value.
            object_type (str): The fully-qualified type of this managed object, i.e. the class name. This property is optional. The ObjectType is implied from the URL path. If specified, the value of objectType must match the class name specified in the URL path.

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            account_moid (str): The Account ID for this managed object.. [optional]  # noqa: E501
            create_time (datetime): The time when this managed object was created.. [optional]  # noqa: E501
            domain_group_moid (str): The DomainGroup ID for this managed object.. [optional]  # noqa: E501
            mod_time (datetime): The time when this managed object was last modified.. [optional]  # noqa: E501
            moid (str): The unique identifier of this Managed Object instance.. [optional]  # noqa: E501
            owners ([str]): [optional]  # noqa: E501
            shared_scope (str): Intersight provides pre-built workflows, tasks and policies to end users through global catalogs. Objects that are made available through global catalogs are said to have a &#39;shared&#39; ownership. Shared objects are either made globally available to all end users or restricted to end users based on their license entitlement. Users can use this property to differentiate the scope (global or a specific license tier) to which a shared MO belongs.. [optional]  # noqa: E501
            tags ([MoTag]): [optional]  # noqa: E501
            version_context (MoVersionContext): [optional]  # noqa: E501
            ancestors ([MoBaseMoRelationship], none_type): An array of relationships to moBaseMo resources.. [optional]  # noqa: E501
            parent (MoBaseMoRelationship): [optional]  # noqa: E501
            permission_resources ([MoBaseMoRelationship], none_type): An array of relationships to moBaseMo resources.. [optional]  # noqa: E501
            display_names (DisplayNames): [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        self.class_id = class_id
        self.object_type = object_type
        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
